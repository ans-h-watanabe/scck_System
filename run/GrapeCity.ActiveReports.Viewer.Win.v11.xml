<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GrapeCity.ActiveReports.Viewer.Win.v11</name>
  </assembly>
  <members>
    <member name="T:GrapeCity.ActiveReports.PrintExtension">
      <summary>ページとセクションドキュメントに対して、印刷方法を提供します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.SectionDocument)">
      <summary>セクションドキュメントを印刷します。</summary>
      <param name="sectionDocument">印刷するドキュメント。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.SectionDocument,System.Boolean)">
      <summary>セクションドキュメントを印刷します。</summary>
      <param name="sectionDocument">印刷するドキュメント。</param>
      <param name="showPrintDialog">Trueの場合は、印刷ダイアログが表示されます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.SectionDocument,System.Boolean,System.Boolean)">
      <summary>セクションドキュメントを印刷します。</summary>
      <param name="sectionDocument">印刷するドキュメント。</param>
      <param name="showPrintDialog">Trueの場合は、印刷ダイアログが表示されます。</param>
      <param name="showPrintProgressDialog">Trueの場合は、印刷状態の情報を示すダイアログが表示されます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.SectionDocument,GrapeCity.Viewer.Common.PrintingSettings)">
      <summary>セクションドキュメントを印刷します。</summary>
      <param name="sectionDocument">印刷するドキュメント。</param>
      <param name="settings">設定。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.SectionDocument,System.Boolean,System.Boolean,System.Boolean)">
      <summary>セクションドキュメントを印刷します。</summary>
      <param name="sectionDocument">印刷するドキュメント。</param>
      <param name="showPrintDialog">Trueの場合は、印刷ダイアログが表示されます。</param>
      <param name="showPrintProgressDialog">Trueの場合は印刷状態の情報を示すダイアログが表示されます。</param>
      <param name="usePrintingThread">Trueの場合は、印刷が個別のスレッドで行われます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.PageDocument)">
      <summary>ページドキュメントを印刷します。</summary>
      <param name="pageDocument">印刷するドキュメント。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.PageDocument,System.Boolean)">
      <summary>ページドキュメントを印刷します。</summary>
      <param name="pageDocument">印刷するドキュメント。</param>
      <param name="showPrintDialog">Trueの場合は、印刷ダイアログが表示されます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.PageDocument,System.Boolean,System.Boolean)">
      <summary>ページドキュメントを印刷します。</summary>
      <param name="pageDocument">印刷するドキュメント。</param>
      <param name="showPrintDialog">Trueの場合は、印刷ダイアログが表示されます。</param>
      <param name="showPrintProgressDialog">Trueの場合は、印刷状態の情報を示すダイアログが表示されます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.PageDocument,System.Boolean,System.Boolean,System.Boolean)">
      <summary>ページドキュメントを印刷します。</summary>
      <param name="pageDocument">印刷するドキュメント。</param>
      <param name="showPrintDialog">Trueの場合は、印刷ダイアログが表示されます。</param>
      <param name="showPrintProgressDialog">Trueの場合は、印刷状態の情報を示すダイアログが表示されます。</param>
      <param name="usePrintingThread">Trueの場合は、印刷が個別のスレッドで行われます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PrintExtension.Print(GrapeCity.ActiveReports.Document.PageDocument,GrapeCity.Viewer.Common.PrintingSettings)">
      <summary>ページドキュメントを印刷します。</summary>
      <param name="pageDocument">印刷するドキュメント。</param>
      <param name="settings">設定。</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor">
      <summary>リモートActiveReports Serverのレポートについて説明します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ArsClient.ViewerExtension">
      <summary>GrapeCity.ActiveReports.Viewer.Win.Viewer型を拡張します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.#ctor">
      <summary>クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.AuthToken">
      <summary>レポートサーバーに接続するために使用した認証トークンを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.ParametersValues">
      <summary>レポートの実行するために使用されるレポートパラメータの値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.Password">
      <summary>レポートサーバーに接続するために使用するパスワードを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.ReportId">
      <summary>サーバー上のレポートIDを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.ReportName">
      <summary>サーバー上のレポート名を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.ReportServerUrl">
      <summary>レポートサーバーのためのURLを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.RevisionNumber">
      <summary>サーバー上のレポートのリビジョン番号を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.Timeout">
      <summary>サーバーと通信するためのミリ秒数を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.UseCache">
      <summary>レポート描画の結果がキャッシュで読み込まれるかどうかを示す値を取得または設定します。デフォルトはTrueです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.UserName">
      <summary>レポートサーバーに接続するために使用するユーザ名を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ArsClient.ViewerExtension.LoadDocument(GrapeCity.ActiveReports.Viewer.Win.Viewer,GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor)">
      <summary>ActiveReports Serverからレポートを読み込みします。</summary>
      <param name="viewer">レポートを読み込みするためビューワ。</param>
      <param name="remoteReport">リモートレポート記述子。</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.TargetView">
      <summary>ビューワ内の現在アクティブなビューを決定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Viewer.Win.TargetView.Primary">
      <summary>プライマリ（下の）ビューがアクティブなビューです。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Viewer.Win.TargetView.Secondary">
      <summary>セカンダリ（上の）ビューがアクティブなビューです。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.FindEventArgs">
      <summary>Findイベントのデータを提供します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventArgs">
      <summary>HyperLinkイベントのデータを提供します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.ParametersPanel">
      <summary>ビューワのパラメータパネルを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.ReportParameter">
      <summary>レポートのパラメータを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.SearchPanel">
      <summary>Viewerコントロールの検索パネルを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.Sidebar">
      <summary>ビューワのサイドバーを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.ThumbnailsPanel">
      <summary>Viewerコントロールのサムネールのパネルを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.TocPanel">
      <summary>Viewerコントロールの目次パネルを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.Viewer">
      <summary>Viewerコントロールは、レポートドキュメントを画面でプレビューするときに使用します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.Viewer.ActionEventArgs">
      <summary>Actionイベントのデータを提供します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.Viewer.ViewerToolbar">
      <summary>ビューワツールバーのオブジェクトを取得し、ToolStripの各コンポーネントで項目を追加および削除したり、追加された項目のツールクリックイベントを実装したりすることができます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.ZoomChangedEventArgs">
      <summary>ZoomChangedイベントのデータを提供します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.FindEventArgs.#ctor(System.Boolean,System.Int32)">
      <summary>FindEventArgsクラスの新しいインスタンスを初期化し、<see cref="GrapeCity.ActiveReports.Viewer.Win.v11~GrapeCity.ActiveReports.Viewer.Win.FindEventArgs~Found.html">Found</see>プロパティと<see cref="GrapeCity.ActiveReports.Viewer.Win.v11~GrapeCity.ActiveReports.Viewer.Win.FindEventArgs~PageIndex.html">PageIndex</see>プロパティを設定します。</summary>
      <param name="found">テキストが見つかったかどうかを表します。</param>
      <param name="pageIndex">テキストが見つかったページ番号。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.FindEventArgs.Found">
      <summary>テキストが見つかったかどうかを表す値を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.FindEventArgs.PageIndex">
      <summary>テキストが見つかったページ番号を取得します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.String)">
      <summary>HyperLinkEventArgsクラスの新しいインスタンスを初期化し、<see cref="GrapeCity.ActiveReports.Viewer.Win.v11~GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventArgs~Button.html">Button</see>プロパティと<see cref="GrapeCity.ActiveReports.Viewer.Win.v11~GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventArgs~HyperLink.html">HyperLink</see>プロパティに指定した値を設定します。</summary>
      <param name="button">クリックしたマウスボタン。</param>
      <param name="hyperLink">ハイパーリンクの対象。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventArgs.Button">
      <summary>このイベントが発生するときにユーザーがクリックしたマウスボタンを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventArgs.CreateNewTab">
      <summary>新しいタブが作成されたかどうかされたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventArgs.Handled">
      <summary>このイベントが処理されたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventArgs.HyperLink">
      <summary>ハイパーリンクの対象を取得します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.ParametersPanel.Refresh">
      <summary>
        <div style="color: rgb(0, 0, 0); padding-top: 2px; padding-bottom: 2px; margin-bottom: 5px; border-bottom-color: rgb(208, 208, 208); border-bottom-width: 1px; border-bottom-style: none;">
このメソッドはパラメータパネルを更新します。
</div>
      </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ParametersPanel.Text">
      <summary>パラメータパネルのキャプションを取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.ReportParameter.#ctor(System.String,System.Object)">
      <summary>1つの値で新しいインスタンスを初期化します。</summary>
      <param name="name">パラメータの名前。</param>
      <param name="value">パラメータの値。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.ReportParameter.#ctor(System.String,System.Collections.Generic.ICollection{System.Object})">
      <summary>複数の値で新しいインスタンスを初期化します。</summary>
      <param name="name">パラメータの名前。</param>
      <param name="values">パラメータ値のコレクション。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.ReportParameter.#ctor(System.String)">
      <summary>値なしで新しいインスタンスを初期化します。</summary>
      <param name="name">パラメータの名前。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ReportParameter.Name">
      <summary>レポートパラメータの名前を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ReportParameter.Values">
      <summary>レポートパラメーターに対する0以上の値のコレクションを取得します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.SearchPanel.Clear">
      <summary>このメソッドは、検索パラメータのリセットまたは検索結果の削除のようなSearchPanelのUIをクリアします。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SearchPanel.Text">
      <summary>検索パネルのキャプションを取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Sidebar.ToggleVisibility">
      <summary>サイドバーの表示を切り替えます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Sidebar.ParametersPanel">
      <summary>パラメータパネルオブジェクトを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Sidebar.SearchPanel">
      <summary>検索パネルオブジェクトを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Sidebar.SelectedIndex">
      <summary>選択パネルのインデックスを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Sidebar.ThumbnailsPanel">
      <summary>サムネイルパネルオブジェクトを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Sidebar.TocPanel">
      <summary>目次パネルオブジェクトを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Sidebar.Visible">
      <summary>サイドバーを表示するかどうかを指定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Sidebar.Width">
      <summary>サイドバーの幅を取得または設定します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Sidebar.SelectedIndexChanged">
      <summary>選択されたパネルのインデックスが変更されたとき、発生します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ThumbnailsPanel.Text">
      <summary>サムネイルパネルのキャプションを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ThumbnailsPanel.Zoom">
      <summary>ThumbnailsPanelにあるアイテムのズームレベルを取得または設定します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.ThumbnailsPanel.ZoomChanged">
      <summary>ThumbnailsPanelでズームの値が変更されたときに発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.TocPanel.Clear">
      <summary>目次パネルをクリアします。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.TocPanel.Refresh">
      <summary>目次パネルを、強制的にクライアント側を無効にさせて、直後に目次と目次の子コントロールが再描画されるようにします。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.TocPanel.ContextMenu">
      <summary>ユーザが目次パネルを右クリックする際に使用されるコンテキスト <wbr></wbr>メニューの取得、または設定を行います。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.TocPanel.Expanded">
      <summary>TOCPanelが展開されているかどうかを示すブール値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.TocPanel.Text">
      <summary>目次パネルのキャプションを取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.#ctor">
      <summary>Viewerコントロールの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.HandleError(System.Exception)">
      <summary>
        <span style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 13px arial, sans-serif; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(34,34,34); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
実行時のエラーを報告します。</span>
      </summary>
      <param name="ex">
        <span style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 13px arial, sans-serif; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(34,34,34); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
報告する例外。</span>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)">
      <summary>
        <para>ロードしたレポートを指定した描画拡張で、指定されたファイル（またはファイルのグループ）にエクスポートします。</para>
        <para>注意： このメソッドは、ページレポートでのみ使用可能です。</para>
      </summary>
      <param name="extension">現在ロードしたレポートを描画する描画拡張です。</param>
      <param name="streamProvider">描画出力を保存するストリームプロバイダーです。</param>
      <param name="settings">描画拡張の設定です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.SetParametersValues(System.Collections.Generic.IEnumerable{GrapeCity.Viewer.Common.IParameter})">
      <summary>表示されているレポートのパラメータの値を設定します。</summary>
      <param name="parameters">
        <para>設定するパラメータの値</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.ShowFindDialog">
      <summary>検索ダイアログを表示します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Export(GrapeCity.ActiveReports.Export.IDocumentExportEx,System.IO.FileInfo)">
      <summary>指定したエクスポートフィルタを使用し、現在ロードされたレポートを指定した範囲で指定したファイルにエクスポートします。</summary>
      <param name="filter">現在ロードしたレポートをエクスポートするフィルタです。</param>
      <param name="file">エクスポートされた結果を保存するファイル。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Export(GrapeCity.ActiveReports.Export.IDocumentExportEx,System.IO.FileInfo,System.String)">
      <summary>指定したエクスポートフィルタを使用し、現在ロードされたレポートを指定した範囲で指定したファイルにエクスポートします。</summary>
      <param name="filter">現在ロードしたレポートをエクスポートするフィルタです。</param>
      <param name="file">エクスポートされた結果を保存するファイル。</param>
      <param name="pageRange">
        <div>
    ページ番号の範囲を示します。範囲は、 <wbr></wbr>最初の場号と最後の番号の間に「-」 <wbr></wbr>を使用して示すことができます。単一のページも含めることができます。 <wbr></wbr>各範囲または単一のページはカンマ区きりにより分割されます。
</div>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Export(GrapeCity.ActiveReports.Export.IDocumentExportEx,System.IO.Stream)">
      <summary>指定したエクスポートフィルタを使用し、現在ロードされたレポートを指定した範囲で指定したファイルにエクスポートします。</summary>
      <param name="filter">現在ロードしたレポートをエクスポートするフィルタです。</param>
      <param name="stream">クスポートされた結果を保存するSystem.IO. <wbr></wbr>Streamです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Export(GrapeCity.ActiveReports.Export.IDocumentExportEx,System.IO.Stream,System.String)">
      <summary>指定したエクスポートフィルタを使用し、現在ロードされたレポートを指定した範囲で指定したファイルにエクスポートします。</summary>
      <param name="filter">現在ロードしたレポートをエクスポートするフィルタです。</param>
      <param name="stream">クスポートされた結果を保存するSystem.IO. <wbr></wbr>Streamです。</param>
      <param name="pageRange">
        <div>
    ページ番号の範囲を示します。範囲は、 <wbr></wbr>最初の場号と最後の番号の間に「-」 <wbr></wbr>を使用して示すことができます。単一のページも含めることができます。 <wbr></wbr>各範囲または単一のページはカンマ区きりにより分割されます。
</div>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.LoadDocument(System.IO.Stream,GrapeCity.Viewer.Common.DocumentFormat)">
      <summary>レポートドキュメントをロードします。</summary>
      <param name="stream">レポートをロードするSystem.IO.Streamです。</param>
      <param name="format">ロードするレポートの形式です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.LoadDocument(System.String)">
      <summary>レポートを指定したファイルパスからロードします。</summary>
      <param name="filePath">レポートをロードするファイルへのパスです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.LoadDocument(GrapeCity.ActiveReports.Document.PageDocument)">
      <summary>指定したページドキュメントをロードします。</summary>
      <param name="pageDocument">Viewer上で開くページレポートです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.LoadDocument(GrapeCity.ActiveReports.SectionReport)">
      <summary>指定したセクションレポートをロードします。</summary>
      <param name="report">Viewer上で開くセクションレポートです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.LoadDocument(GrapeCity.ActiveReports.Document.SectionDocument)">
      <summary>指定したセクションドキュメントをロードします。</summary>
      <param name="document">Viewer上で開くセクションドキュメントです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Print(System.Boolean)">
      <summary>現在開いているドキュメント（セクションまたはページ）を印刷します。</summary>
      <param name="showPrintDialog">印刷ダイアログを表示するかどうかを指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Print(System.Boolean,System.Boolean)">
      <summary>現在開いているドキュメント（セクションまたはページ）を印刷します。</summary>
      <param name="showPrintDialog">印刷ダイアログを表示するかどうかを指定します。</param>
      <param name="showPrintProgressDialog">印刷進行状況ダイアログを表示するかどうかを指定 <wbr></wbr>します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Print(System.Boolean,System.Boolean,System.Boolean)">
      <summary>現在開いているドキュメント（セクションまたはページ）を印刷します。</summary>
      <param name="showPrintDialog">Trueに設定すると、 <wbr></wbr>ドキュメントの内容をプリンタに送信する前に、 <wbr></wbr>ユーザーがプリンタオプションを設定できる、 <wbr></wbr>印刷ダイアログを表示します。</param>
      <param name="showPrintProgressDialog">Trueに設定すると、 <wbr></wbr>ユーザーが印刷ジョブを停止できる進行状況ダイアログが表示され <wbr></wbr>ます。</param>
      <param name="usePrintingThread">印刷が個別のスレッドにおいて行われるかどうかを指定します。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.AllowSplitter">
      <summary>ユーザーはビューを分割できるかどうかを許可する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.AnnotationDropDownVisible">
      <summary>注釈ツールバーのドロップダウンを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.AnnotationToolbarVisible">
      <summary>注釈ツールバーの表示を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.CanExport">
      <summary>現在ロードしたレポートがエクスポートできるかどうかを示します <wbr></wbr>。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.CurrentPage">
      <summary>ビューワに表示される現在のドキュメントのページ数を取得または設定します。 1ベースの値。 レポートがロードされていない場合は、0を返します。 履歴に影響を与えます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.Document">
      <summary>Viewerコントロールで表示するActiveReportsドキュメントを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.History">
      <summary>ページ表示履歴を管理します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.HyperlinkBackColor">
      <summary>ハイパリンクをホストするコントロールの背景色を取得または設定します。デフォルトは「Transparent」です（セクションレポートのみ）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.HyperlinkForeColor">
      <summary>ハイパリンクをホストするコントロールのテキストの色を取得または設定します。デフォルトは青です（セクションレポートのみ）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.HyperlinkUnderline">
      <summary>ハイパリンクをホストするコントロールで下線付きテキストを取得または設定します。デフォルトはTrueです（セクションレポートのみ）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.MouseMode">
      <summary>
        <span style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 13px arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(34,34,34); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" dir="ltr" id=":c0">ビューワのマウスモードを取得ま <wbr></wbr>たは設定します。</span>
      </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.MouseModeButtonsVisible">
      <summary>ビューワツールバーに、「パンモード」、「選択モード」、「 <wbr></wbr>スナップショット」、 <wbr></wbr>のボタンが表示されるかどうかを指定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.MultiplePageCols">
      <summary>ビューワでMultiPageModeが設定されている場合、表示される水平ページ数を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.MultiplePageRows">
      <summary>ビューワでMultiPageModeが設定されている場合、表示される垂直ページ数を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.PageOffset">
      <summary>ビューワ内のページの位置を指定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.PagesBackColor">
      <summary>レポートペインの背景色用の公開API。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.PreviewPages">
      <summary>ロードするページ。 すべてをロードするために0より小さいまたは等しい値を渡します。 SectionReportまたはPageDocumentインスタンスからロードする場合のみに適用されます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.PrintingSettings">
      <summary>印刷設定を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.RepositionPage">
      <summary>プレビュー時に、ページをスクロールさせて、ページの下の方を表示させた状態で他のページへ移動したときに、ページの先頭から表示するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ScrollbarEnabled">
      <summary>レポートペイン内にスクロールバーを表示・非表示にします。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.SearchResultsBackColor">
      <summary>ビューワコントロールの検索機能を使用し、検索結果のハイライトの背景色を設定または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.SearchResultsForeColor">
      <summary>ビューワコントロールの検索機能を使用し、検索結果のハイライトの前傾色を設定または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.Sidebar">
      <summary>
        <span style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 13px arial, sans-serif; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(34,34,34); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
Viewerコントロールのサイ</span>
        <wbr style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 13px arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(34,34,34); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
        </wbr>
        <span style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 13px arial, sans-serif; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(34,34,34); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">ドバーコンポーネントを取得しま</span>
        <wbr style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; FONT: 13px arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(34,34,34); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
        </wbr>
        <span style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: 13px arial, sans-serif; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(34,34,34); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">す。</span>
      </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.SplitView">
      <summary>ビューワが2つにビューに分割されるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.TableOfContents">
      <summary>TableOfContentsObjectへの参照を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.TargetView">
      <summary>SplitViewがTrueである場合は、現在のターゲットのビューを指定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.Toolbar">
      <summary>コントロールのToolbarObjectへの参照を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.TouchContextMenuStrip">
      <summary>ビューワのタッチモードのコンテキストメニューを取得または設定します。<br></br></summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.TouchMode">
      <summary>タッチモードを有効にするかを指定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.TouchModeButtonVisibility">
      <summary>ビューワのツールバー上にタッチモードのボタンを表示するかを指定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.TouchModeToolbar">
      <summary>タッチモードのツールバーを処理するためのパブリックAPIです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.UseHyperlinkSettings">
      <summary>ビューワにハイパーリンクが表示されるとき、ハイパーリンクの設定を適用するかどうかを取得または設定します（セクションレポートのみ）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ViewType">
      <summary>ビューワでページの表示方法を示す値を取得または設定します（単一/複数/連続ページ）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.Zoom">
      <summary>ビューワの表示倍率を取得または設定します。 -1 はページ幅を基準、または、-2 はページ全体。 無効な値がある場合は、ArgumentOutOfRangeExceptionが発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.Action">
      <summary>このイベントは、レポートのプレビューコントロールで、指定されたアクションのレポートアイテムがクリックされたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.Find">
      <summary>検索ダイアログがドキュメント内で要求されたテキストを見つけたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.HyperLink">
      <summary>ユーザーがハイパーリンクを割り当てられたテキストまたは画像をクリックしたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.LoadCompleted">
      <summary>ビューワのすべてのページが完全にロードされた後に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.LocateCredentials">
      <summary>レポートをプレビューすると資格が必要とされるときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.LocateDataSource">
      <summary>プレビューレポートのデータプロバイダは、実行時にデータを検索する必要がある場合に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.TableOfContentsAfterSelect">
      <summary>見出し一覧でアイテムが選択された後に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.TableOfContentsClick">
      <summary>ユーザーが見出し一覧のアイテムをクリックしたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.TableOfContentsSelectedIndexChanged">
      <summary>目次で現在選択されている項目のインデックスが変更されるときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Viewer.Win.Viewer.ZoomChanged">
      <summary>ビューワでズームの値が変更されたときに発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.ActionEventArgs.#ctor(GrapeCity.Viewer.Common.Model.Interactivity.IAction)">
      <summary>によりレンダリングイベントのデータを初期化します。</summary>
      <param name="action">このイベントに対して行われる行動。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.ActionEventArgs.#ctor(GrapeCity.Viewer.Common.Model.Interactivity.IAction,System.Int32)">
      <summary>によりレンダリングイベントのデータを初期化します。</summary>
      <param name="action">このイベントに対して行われる行動。</param>
      <param name="pageNumber">現在のレイアウトツリー内の、遷移するページ番号。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ActionEventArgs.Action">
      <summary>イベントが発生したときに行われたアクションを指定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ActionEventArgs.PageNumber">
      <summary>現在のレイアウトツリーで移動するページの番号を指定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ViewerToolbar.MainBar">
      <summary>主なツールストリップ。※旧形式のため、使用しません。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ViewerToolbar.MouseModeBar">
      <summary>マウスモード用のツールストリップ。※旧形式のため、使用しません。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ViewerToolbar.NavigationBar">
      <summary>ナビゲーション用のツールストリップ。※旧形式のため、使用しません。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ViewerToolbar.ToolStrip">
      <summary>ToolStripを参照します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.ZoomChangedEventArgs.#ctor(System.Double)">
      <summary>ZoomChangedEventArgsクラスの新しいインスタンスを初期化し、Zoomプロパティ値を設定します。</summary>
      <param name="zoom">新しいズーム値。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.ZoomChangedEventArgs.#ctor">
      <summary>ZoomChangedEventArgsクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ZoomChangedEventArgs.Zoom">
      <summary>ビューワの新しいZoom値を返します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.FindEventHandler">
      <summary>Findイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.HyperLinkEventHandler">
      <summary>ViewerコントロールのHyperLinkイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.ZoomChangedEventHandler">
      <summary>ZoomChangedイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.BaseDocumentModelImpl">
      <summary>
            ページベースのドキュメントのISearchableDocumentおよびISelectableDocumentインターフェイスを使用したDocumentModelの基本実装
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.DocumentModel">
      <summary>
            ドキュメントモデルの基本構造と動作を表します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ActiveModel">
      <summary>
            すべてのアクティブ（加入者に状態の変化を通知する）なモデルの基本クラス。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModel.RaisePropertyChanged(System.String)">
      <summary>
            指定されたイベントのPropertyChangedEventArgsを発生させます。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModel.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
      <summary>
            RaisePropertyChangedメソッドの名前セーフバージョン。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModel.UpdateCommandStatus(GrapeCity.Viewer.Common.IDelegateCommand[])">
      <summary>
            コマンドステートがUIによって強制されるようにします。
            </summary>
      <param name="cmds">
      </param>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ISearchableDocument">
      <summary>
            ドキュメントがテキスト検索機能をサポートできるようにします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ISearchableDocument.Find(GrapeCity.Viewer.Common.Model.FindOptions,GrapeCity.Viewer.Common.Model.SearchResult)">
      <summary>
            テキスト文字列検索を実行します。
            </summary>
      <param name="options">
      </param>
      <param name="startFrom">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ISearchableDocument.GetItemText(GrapeCity.Viewer.Common.Model.SearchResult)">
      <summary>
            結果リスト内の範囲を表示またはハイライトする項目テキスト要素を取得します。
            </summary>
      <param name="result">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ISearchableDocument.HighlightSearchResult">
      <summary>
            現在ハイライトされている検索結果を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ISearchableDocument.NotifySearchResult">
      <summary>
            現在の通知検索結果を取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ISelectableDocument">
      <summary>
            ドキュメントが選択/ハイライト/コピーできる項目を公開することを許可します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ISelectableDocument.SelectItems(System.Int32,GrapeCity.Viewer.Common.Rect)">
      <summary>
            特定のページの特定のフレーム内の項目を現在選択に追加します。
            </summary>
      <param name="pageIndex">
      </param>
      <param name="frame">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ISelectableDocument.ClearSelection">
      <summary>
            選択をクリアします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ISelectableDocument.CurrentSelection">
      <summary>
            現在の選択を取得します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.DocumentModel.NullInstance">
      <summary>
            nullドキュメントのインスタンスを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.#ctor">
      <summary>
            DocumentModelクラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.GetItemText(GrapeCity.Viewer.Common.Model.SearchResult)">
      <summary>
            結果リスト内の範囲を表示またはハイライトする要素テキストを取得します。
            </summary>
      <param name="result">検索の結果。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.TotalPageCount">
      <summary>
            ドキュメント内の合計ページ数を返します。この数は、現在利用可能なページ数よりも多くなる可能性があります。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.PageCount">
      <summary>
            読み込まれたページ数を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.Bookmarks">
      <summary>
            ドキュメントのブックマークコレクションを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.MaxPageSize">
      <summary>
            最大ページサイズを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.PaperSize">
      <summary>
            ドキュメントのデフォルトの用紙サイズを取得します。 実際、SectionReportはモデルに実装されていなくても変数ページを許可します。
従いまして、PaperSizeは不変であると見なされます。ユーザーが、いつでもそれを読むことができ、それはもはや変更されていないと仮定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.Annotations">
      <summary>
            注釈を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.AnnotationsDocument">
      <summary>
            注釈を格納するドキュメントを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.HighlightSearchResult">
      <summary>
            現在ハイライトされている検索結果を取得または設定します。
            </summary>
      <value>ハイライト検索結果。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.NotifySearchResult">
      <summary>
            現在の通知検索結果を取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.DocumentModel.IPage">
      <summary>
            ドキュメントページのインタフェースを定義します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.IPage.GetItems">
      <summary>
            ページアイテム（１以上）を取得します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.IPage.GetItem(System.Int32)">
      <summary>
            ページアイテムを取得します。
            </summary>
      <param name="itemIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo">
      <summary>
            用紙の情報を表します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.#ctor(GrapeCity.Viewer.Common.Size,System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
      <param name="sizeIn">サイズ（インチ単位）です。</param>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.SizeIn">
      <summary>
            ページサイズをデバイスに依存しない単位（インチ）で取得します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.IsLandscape">
      <summary>
            用紙が横向きかどうか。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.Empty">
      <summary>
            空のインスタンスを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.DocumentModel.IPageItem">
      <summary>
            レポートページの最小の部分。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.IPageItem.ItemIndex">
      <summary>
            ページ内の項目を一意に識別します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.IPageItem.Bounds">
      <summary>
            ページ内の項目の境界線を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.DocumentModel.TextItem">
      <summary>
            テキスト項目の基本実装。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.TextItem.Text">
      <summary>
            テキストを取得します。
            </summary>
      <value>テキストです。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.TextItem.Bounds">
      <summary>
            ページ内の項目の境界線を取得します。
            </summary>
      <value>境界を表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.TextItem.ItemIndex">
      <summary>
            ページ内の項目を一意に識別します。
            </summary>
      <value>項目のインデックス。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.DocumentModel.IImageItem">
      <summary>
            画像項目の基本実装。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.IImageItem.GetImage(System.Single,System.Single)">
      <summary>
            画像を取得します。
            </summary>
      <param name="dpiX">水平解像度。</param>
      <param name="dpiY">垂直解像度。</param>
      <returns>IDisposable.</returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.IPageDocument">
      <summary>
            ドキュメント構造へのアクセスを提供します
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.IPageDocument.GetPage(System.Int32)">
      <summary>
            ページドキュメントを取得します。
            </summary>
      <param name="pageIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.IInteractiveDocument">
      <summary>
            対話的な機能を備えたドキュメント。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.IInteractiveDocument.HitTest(System.Int32,System.Single,System.Single)">
      <summary>
            テストをヒットします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.IInteractiveDocument.ProcessOnClick(GrapeCity.Viewer.Common.Model.Interactivity.HitTestInfoBase,GrapeCity.Viewer.Common.Model.IErrorHandler)">
      <summary>
            マウスクリックを処理します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.IInteractiveDocument.GetTooltipText(GrapeCity.Viewer.Common.Model.Interactivity.HitTestInfoBase)">
      <summary>
            ツールチップのテキストを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.HitTestInfoBase">
      <summary>
            ヒットテスト情報の基本クラス。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Interactivity.HitTestInfoBase.Empty">
      <summary>
            空のインスタンス。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Interactivity.HitTestInfoBase.AcceptsEvents">
      <summary>
            イベントを受け入れるかどうかを示す値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Interactivity.HitTestInfoBase.ShowTooltip">
      <summary>
            ツールチップを表示するかどうかを示す値を取得または設定します。
            </summary>
      <value>
        [ツールチップを表示する]の場合は、<c>true</c>。それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.IExportableDocument">
      <summary>
            ドキュメントがエクスポート機能をサポートできるようにします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.IExportableDocument.Export(GrapeCity.Viewer.Common.Model.ExportOptions,System.IO.Stream)">
      <summary>
            エクスポートを行います。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ExportOptions">
      <summary>
            エクスポート設定を表します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ReportModelBase">
      <summary>
            レポートのインスタンスを表します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportModelBase.MaxTotalPageCount">
      <summary>
            最大合計ページ数。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportModelBase.GracefulShutdownTimeoutMs">
      <summary>
            レポートの読み込みを中止するために与えられた期間です。その後、強制的に構成されます。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.Load(GrapeCity.Viewer.Common.IDocumentLoader)">
      <summary>
            レポートにデータを読み込みます。子孫で実装する必要があります。
            </summary>
      <param name="input">読み込みの方法を定義するローダー。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.CancelLoad">
      <summary>
            レポート読み込みのシャットダウンシーケンスを開始します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.CreateExecuteCommand">
      <summary>
            オーバーライドし、Executeコマンドの実装を提供します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.OnParametersUpdate">
      <summary>
            パラメータが読み込まれた後に派生ctorから呼び出されることを意図します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.SetupExecutionContext(System.Threading.SynchronizationContext,GrapeCity.Viewer.Common.Model.IDocumentConsumer)">
      <summary>
            実行処理コンテキストをレポートに戻すためのHACK一時スタブメソッド。
            </summary>
      <param name="context">
      </param>
      <param name="consumer">
      </param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.HasParameters">
      <summary>
            レポートにパラメータがあることを示します。これは、非揮発性です。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.DisableRefreshCancel">
      <summary>
            更新/キャンセルボタンを適用できないものとして無効にします（例：Documentは実行時に割り当てられます）。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.AllParametersValid">
      <summary>
            すべてのパラメータが有効な値を取得し、レポートを実行できる場合はtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.GalleyMode">
      <summary>
            レポートをGalleyModeで描画する必要がある場合はtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.ReportCulture">
      <summary>
            レポートのカルチャ。レポートにそのような情報が存在しない場合は、Null。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.AllowGalleyMode">
      <summary>
            レポートにGalleyModeオプションがある場合はtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.AllowBackToParent">
      <summary>
            レポートにBackToParent機能がある場合はtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.Run">
      <summary>
            「Execute」コマンドを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.Cancel">
      <summary>
            「Cancel loading」コマンドを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.LoadState">
      <summary>
            現在のレポートの実行または読み込み状態を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.Error">
      <summary>
            LoadStateがLoadState.Errorの場合はnullでなく、そうでない場合はnull。
セカンドクラスのプロパティ：このプロパティの変更について通知が行われません。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportModelBase.AutoRun">
      <summary>
            レポートが読み込んだ後で実行する必要がある場合はtrueを返します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.IParameterizedReport">
      <summary>
            パラメータ付きレポート
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.IParameterizedReport.Refresh">
      <summary>
            パラメータをデフォルトに戻します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IParameterizedReport.Parameters">
      <summary>
            レポートパラメータのコレクション。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.IReportParameterWithRelativeDate">
      <summary>
            相対日付でサポートされるレポートパラメータ用のインタフェースを定義します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.IReportParameter">
      <summary>
            レポートパラメータにインタフェースを定義します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.Name">
      <summary>
            パラメーター名を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.ParameterType">
      <summary>
            パラメーターの型を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.Prompt">
      <summary>
            パラメーターのキャプションを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.Nullable">
      <summary>
            null許容型のチェックボックスを表示する必要がある場合はtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.MultiLine">
      <summary>
            テキストフィールドが複数行の場合にtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.MultiValue">
      <summary>
            パラメータで複数の値を入力できるかどうかを指定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.AllowEmpty">
      <summary>
            パラメータがStringで、String.Emptyを受け入れる場合はTrueです。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.DateOnly">
      <summary>
            パラメータがDateTimeの場合、ユーザーが日付と時刻の両方を入力するか、日付のみを入力する必要があるかどうかを指定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.Value">
      <summary>
            パラメータ値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.AvailableValues">
      <summary>
            複数値パラメーターで使用可能な値のリスト
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.Values">
      <summary>
            複数値パラメータの場合のパラメータ値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.State">
      <summary>
            パラメータの状態
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.DependantParameters">
      <summary>
            DependantParameters
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.ExtendedInfo">
      <summary>
            拡張エラーパラメータを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameter.SelectAll">
      <summary>
            複数値パラメータの場合の特別なパラメータ値（すべての値を選択）
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameterWithRelativeDate.IsRelativeDate">
      <summary>
            相対日付の値を入力する場合はTrue
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameterWithRelativeDate.StartDatePart">
      <summary>
            相対日付の開始部分の値。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameterWithRelativeDate.ShiftDatePart">
      <summary>
            相対日付のシフト部分の値。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameterWithRelativeDate.RangeDatePart">
      <summary>
            相対日付の範囲部分の値。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.IReportParameterValue">
      <summary>
            レポートパラメータ値用のインタフェース。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameterValue.Index">
      <summary>
            パラメータ一意インデックス
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameterValue.Label">
      <summary>
            パラメータラベル
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IReportParameterValue.Value">
      <summary>
            パラメータ値
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.INotifyCollectionChanged">
      <summary>
            項目が追加や削除されたとき、コレクションオブジェクト全体がリセットされたときなど、コレクションに対する動的な変更についてリスナーに通知します。
            </summary>
    </member>
    <member name="E:GrapeCity.Viewer.Common.INotifyCollectionChanged.CollectionChanged">
      <summary>
            コレクションの項目のリストが変更されたとき、またはコレクションがリセットされたときに発生します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ArsClient.RemoteReportDescriptor.IsParametrized">
      <summary>
            レポートがパラメータを含むかどうかを示す値を取得または設定します。
            
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.Ars.RemoteReportTimeoutException">
      <summary>
            描画に指定されたタイムアウトより以上に時間がかかっている場合に発生される例外を表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Ars.RemoteReportTimeoutException.#ctor">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Viewer.Win.Ars.RemoteReportTimeoutException">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.IActionHandler">
      <summary>
            カスタムのレポートアクションハンドラ
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.IActionHandler.ProcessAction(GrapeCity.Viewer.Common.Model.Interactivity.IAction)">
      <summary>
            レポートアクション用にカスタムハンドラを提供します。
            </summary>
      <param name="action">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.IActionHandler.Drillthrough(GrapeCity.Viewer.Common.Model.Interactivity.DrillthroughAction)">
      <summary>
            ドリルスルーアクションのカスタムハンドラ
            </summary>
      <param name="action">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.Controls.ThemeEditor.ThemeEditor">
      <summary>
            テーマエディタコントロールを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Controls.ThemeEditor.ThemeEditor.#ctor(System.IServiceProvider)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Viewer.Win.Controls.ThemeEditor.ThemeEditor">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="serviceProvider">サービスプロバイダーです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Controls.ThemeEditor.ThemeEditor.ResetEditorsIsDirtyState">
      <summary>
            エディタの状態をリセット（IsDirty）します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Controls.ThemeEditor.ThemeEditor.Dispose(System.Boolean)">
      <summary> 
            使用されているリソースをクリアします。
            </summary>
      <param name="disposing">マネージリソースを解放する必要がある場合は、true。それ以外の場合は、false。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Controls.ThemeEditor.ThemeEditor.Theme">
      <summary>
            現在表示されているテーマ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Controls.ThemeEditor.ThemeEditor.IsDirty">
      <summary>
            ユーザーがテーマを変更した場合は、True。変更していない場合は、false。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IDocumentRenderer">
      <summary>
            ドキュメントレンダラー用の基本インターフェース
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IDocumentRenderer.RenderPage(System.Int32)">
      <summary>
            現在のドキュメントからページを描画します。
            </summary>
      <param name="index">描画するページのインデックス。</param>
      <returns>描画されたページのビュー。</returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IDocumentRendererFactory">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.IDocumentRenderer">
        </see>ファクトリインタフェース。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IDocumentRendererFactory.Create(GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.Model.DocumentModel)">
      <summary>
            指定されたドキュメントに対して指定したコンテキストでIDocumentRendererを作成します。
            </summary>
      <param name="context">アプリケーションコンテキストです。</param>
      <param name="document">ドキュメントモデルです。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IDocumentRendererFactory.Create(GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.Model.DocumentModel,GrapeCity.Viewer.Common.DeviceKind)">
      <summary>
            指定されたドキュメントに、指定のコンテキストおよびターゲットデバイスの種類を含んだIDocumentRendererを作成します。
            </summary>
      <param name="context">アプリケーションコンテキストです。</param>
      <param name="document">ドキュメントモデルです。</param>
      <param name="device">ターゲットデバイスです。</param>
    </member>
    <member name="T:GrapeCity.Viewer.Common.PageView">
      <summary>
            具象ページレンダラーの基本抽象クラス。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.PageView.AsCachable(GrapeCity.Viewer.Common.Implementation.CacheFormat)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.CachedPageView">
        </see>に変換します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.PageView.Size">
      <summary>
            ページビューのサイズを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.PageView.Device">
      <summary>
            デバイスの種類を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook">
      <summary>
            ドキュメント全体の注釈項目のコレクションを定義します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.NullInstance">
      <summary>
             空の編集不可能な注釈ブックを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.GetPageSafe(System.Int32)">
      <summary>
            間違ったページインデックスが渡されましたことを無視してページを取得します。
            </summary>
      <param name="pageIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.Create(GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind,GrapeCity.Viewer.Common.Rect)">
      <summary>
            オーバーライドしたときに注釈項目が作成されます。
            </summary>
      <param name="type">
      </param>
      <param name="bounds">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.CanCreate(GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind)">
      <summary>
            特定の注釈が作成できた場合はtrueを返します。
            </summary>
      <param name="type">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.ReplaceSelection(System.Int32,GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem)">
      <summary>
            ページ選択に特定の項目を追加します。
            </summary>
      <param name="pageIndex">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.ReplaceSelection(System.Int32,System.Collections.Generic.IEnumerable{GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem})">
      <summary>
            指定された項目をページ選択に追加します。
            </summary>
      <param name="pageIndex">
      </param>
      <param name="items">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.ClearSelection">
      <summary>
            選択をクリアします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.Pages">
      <summary>
            注釈ページを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.Selection">
      <summary>
            現在選択されている（１以上）注釈項目を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationsPage">
      <summary>
            注釈で定義されたページ
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationsPage.NullInstance">
      <summary>
            Gets
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ObservableCollection`1">
      <summary>
            ラップされたSystem.Collections.ObjectModelobservableコレクション。
            </summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.INotificationCollection`1">
      <summary>
            通知とインデクサでコレクションに対するインターフェースを定義します。
            </summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.IItemCollection`1">
      <summary>
            インターフェイスを読み取り専用コレクションとして定義します。
            </summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ObservableCollection`1">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="data">最初の項目のリスト。</param>
    </member>
    <member name="E:GrapeCity.Viewer.Common.ObservableCollection`1.PropertyChanged">
      <summary>
            プロパティの値が変更されたときに発生します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem">
      <summary>
            AnnotationItem項目に対して定義したインターフェース。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.MinSize">
      <summary>
            注釈項目の最小サイズ。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.NativeItem">
      <summary>
            内部実装を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Bounds">
      <summary>
            注釈の境界を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.PaintBounds">
      <summary>
            注釈がペイントする領域を取得します。
            注釈が境界外に描画されて無効化の問題を修正する場合はオーバーライドします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.UiEditCaps">
      <summary>
            マウスまたはキーボードを使用して更新できるプロパティを指定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.CachedPageView">
      <summary>
            キャッシュを含むページビューの基本クラス。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IOrientedPageView">
      <summary>
            レポートページの向きにアクセスするためのインターフェイス。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.Add(`0,`1)">
      <summary>
            新しい項目をキャッシュに追加します。
            </summary>
      <param name="k">追加する項目の識別子またはキー。</param>
      <param name="v">保存する実際の項目。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.Purge(`0)">
      <summary>
            指定された項目をキャッシュから切り替えます。
            </summary>
      <param name="k">削除する項目の識別子。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.Remove(`0)">
      <summary>
            キャッシュから項目を削除します。
            </summary>
      <param name="k">削除する項目の識別子。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.Clear">
      <summary>
            キャッシュを完全にクリアします。キャッシュ内に含まれた項目を破棄しません。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.Touch(`0)">
      <summary>
            指定された項目をタッチまたは更新します。  これにより、指定された項目を破棄するキューの最後に移動できます。.  たとえば、. 
この項目が消去されないことによって恩恵を受けることが判明した場合場合。
            </summary>
      <param name="k">タッチする項目の識別子。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.GetValue(`0)">
      <summary>
            指定された識別子に関連付けられた項目を返します。
            </summary>
      <param name="k">返される値の識別子。</param>
      <returns>指定されたキーに対応する項目値。</returns>
      <remarks>このように格納された項目にアクセスすると、そのアイテムが自動的に消去するキューの最後に移動します。</remarks>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.ContainsKey(`0)">
      <summary>
            項目が現在キャッシュにある場合はtrueを取得します。
            </summary>
      <param name="k">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.GetKeys">
      <summary>
            キャッシュに現在格納されている項目のキーを取得します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.GenericCache`3.PurgeAll">
      <summary>
            すべての項目のキャッシュを空にします。
            </summary>
    </member>
    <member name="E:GrapeCity.Viewer.Common.Implementation.GenericCache`3.PurgeItem">
      <summary>
            項目がキャッシュから消去される前に発生します。
            </summary>
    </member>
    <member name="E:GrapeCity.Viewer.Common.Implementation.GenericCache`3.FetchItem">
      <summary>
            項目が要求されましたが、キャッシュに見つからないときに呼び出されます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.GenericCache`3.FillFactor">
      <summary>
            フィルファクターを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.GenericCache`3.Capacity">
      <summary>
            キャッシュ容量を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.GenericCache`3.SpaceUsed">
      <summary>
            現在使用中の容量を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.GenericCache`3.Count">
      <summary>
            キャッシュの項目数を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.GenericCache`3.Item(`0)">
      <summary>
            指定されたキーで値を取得します。キャッシュにキーが含まれていない場合はnullを返します。
            </summary>
      <param name="k">
      </param>キーの識別値。
        </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.GenericCache`3.FetchItemEventArgs">
      <summary>
            FetchItemイベントの引数を表します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Implementation.GenericCache`3.FetchItemEventArgs.Empty">
      <summary>
            空のインスタンスを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.GenericCache`3.FetchItemEventArgs.Key">
      <summary>
            取得する項目のキーを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.GenericCache`3.FetchItemEventArgs.Value">
      <summary>
            項目の値を取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.GenericCache`3.PurgeItemEventArgs">
      <summary>
            PurgeItemイベントの引数を表します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.GenericCache`3.PurgeItemEventArgs.Node">
      <summary>
            消去されるノードを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.CacheNode`2">
      <summary>
            キャッシュの項目を表します。
            </summary>
      <typeparam name="TKey">
      </typeparam>
      <typeparam name="TValue">
      </typeparam>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.CacheNode`2.Key">
      <summary>
            キャッシュされた項目のキーを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.CacheNode`2.Value">
      <summary>
            キャッシュされた項目の値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.CacheNode`2.SpaceUsed">
      <summary>
            使用されたスペースを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.CacheNodeFactory`2">
      <summary>
            キャッシュノードを作成するためのジェネリック境界の方法を提供します。
            </summary>
      <typeparam name="TKey">
      </typeparam>
      <typeparam name="TValue">
      </typeparam>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.CacheNodeFactory`2.CreateNew(`0,`1)">
      <summary>
            新しいキャッシュノードを作成します。
            </summary>
      <param name="key">
      </param>
      <param name="node">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IApplicationContext">
      <summary>
            さまざまなサービスやファクトリへのアクセスを提供します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IApplicationContext.CreateReport(GrapeCity.Viewer.Common.DocumentFormat)">
      <summary>
            特定の形式のドキュメントのローダーを作成します。
            </summary>
      <param name="format">ドキュメントの書式。</param>
      <param name="loadParam">
      </param>
      <returns>作成されたローダー。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IApplicationContext.CreateRenderer(GrapeCity.Viewer.Common.Model.DocumentModel)">
      <summary>
            特定のドキュメントに対してページレンダラーを作成します。
            </summary>
      <param name="document">描画するためのドキュメント。</param>
      <returns>新規作成されたレンダラー。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IApplicationContext.CreateRenderer(GrapeCity.Viewer.Common.Model.DocumentModel,GrapeCity.Viewer.Common.DeviceKind)">
      <summary>
            ターゲットデバイスの種類を考慮して、特定のドキュメントのレンダラーを作成します。
            </summary>
      <param name="document">ドキュメントモデルです。</param>
      <param name="device">ターゲットデバイスの種類。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.IApplicationContext.ServiceContainer">
      <summary>
            サービスコンテナを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.IApplicationContext.Context">
      <summary>
            同期コンテキストを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ICopySelectionService">
      <summary>
            コピー操作用の基本インターフェース
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ICopySelectionService.CopySelection(GrapeCity.Viewer.Common.Model.DocumentSelection)">
      <summary>
            指定された選択をプラットフォーム固有のストレージにコピーします。
            </summary>
      <param name="selection">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ICopySelectionService.CopyToClipBoard(System.String)">
      <summary>
            指定されたテキストをクリップボードにコピーします。
            </summary>
      <param name="text">
      </param>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.FlagEnumUiEditor">
      <summary>
            UITypeEditor for flag enums
            This implementation has taken from http://www.codeproject.com/Articles/13793/A-UITypeEditor-for-easy-editing-of-flag-enum-prope
            with minor refactoring
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.FlagEnumUiEditor.#ctor">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Viewer.Win.FlagEnumUiEditor">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.FlagEnumUiEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> method.
            </summary>
      <param name="context">追加のコンテキスト情報を取得するために使用できる<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="provider">An <see cref="T:System.IServiceProvider"></see> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.FlagEnumUiEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)">
        </see>メソッドで使用されるエディタスタイルを取得します。
            </summary>
      <param name="context">追加のコンテキスト情報を取得するために使用できる<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <returns>
        <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)">
        </see>メソッドで使用されるエディタのスタイルを示す<see cref="T:System.Drawing.Design.UITypeEditorEditStyle"></see>値。<see cref="T:System.Drawing.Design.UITypeEditor"></see>がこのメソッドをサポートしていない場合、<see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see>は<see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"></see>を返します。</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.GenericActionEventArgs">
      <summary>
            Internal HyperLinkEventArgs representation, generalized to accomodate IAction. 内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.GenericActionEventArgs.#ctor(System.Windows.Forms.MouseButtons,GrapeCity.Viewer.Common.Model.Interactivity.IAction)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Viewer.Win.GenericActionEventArgs">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="button">The mouse button that the user clicked to raise the event.</param>
      <param name="action">The action.</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.GenericActionEventArgs.Button">
      <summary>
            Gets the mouse button that the user clicked to raise the event.  
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.GenericActionEventArgs.Action">
      <summary>
            Gets the hyperlink target.  
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.GenericActionEventArgs.Handled">
      <summary>
            Sets or returns a value indicating whether the HyperLinkEvent is handled.  
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel">
      <summary>
            サイドバーパネルのパブリックプロパティを公開します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.ViewerViewModel">
      <summary>
            ビューワ全体のビューモデルです。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.Refresh">
      <summary>
            サイドバーパネルを再描画します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.Clear">
      <summary>
            このインスタンスをクリアします。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.VisibleRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel"></see>が可視かどうかを示す値を取得または設定します。
            </summary>
      <value>
        可視の場合はtrue;それ以外の場合は、false。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.EnabledRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel"></see>が有効になっているかどうかを示す値を取得または設定します。
            </summary>
      <value>
        有効の場合は<c>true</c>;それ以外の場合は、<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.Visible">
      <summary>
            この<see cref="T:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel"></see>が可視かどうかを示す値を取得または設定します。
            </summary>
      <value>
        可視の場合はtrue;それ以外の場合は、false。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.Enabled">
      <summary>
            この<see cref="T:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel"></see>が有効になっているかどうかを示す値を取得または設定します。
            </summary>
      <value>
        有効の場合は<c>true</c>;それ以外の場合は、<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.Width">
      <summary>
            サイドバー全体の幅を取得または設定します。
            </summary>
      <remarks>
            メモ：このプロパティは下位互換性のみのために追加されました。
            このプロパティの代わりにViewer.Sidebar.Widthを使用してください（使用可能な場合）。
            </remarks>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.ContextMenu">
      <summary>
            サイドバーパネルのコンテキストメニューを取得または設定します。
            </summary>
      <value>コンテキストメニューを表します。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SidebarPanel.Text">
      <summary>
            サイドバーパネルのキャプションを取得または設定します。
            </summary>
      <value>キャプションテキストです。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ParametersPanel.VisibleRuntime">
      <summary>
            オーバーライドされました。実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.ParametersPanel"></see>が可視かどうかを示す値を取得または設定します。
            </summary>
      <value>
        可視の場合は<c>true</c>;それ以外の場合は、false。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ParametersPanel.EnabledRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.ParametersPanel"></see>が有効になっているかどうかを示す値を取得または設定します。
            </summary>
      <value>
        有効の場合は<c>true</c>;それ以外の場合は、<c>false</c>。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IParameter">
      <summary>
            レポートパラメータとして使用できるオブジェクトを定義します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.IParameter.Name">
      <summary>
            レポートパラメータの名前を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.IParameter.Values">
      <summary>
            レポートパラメータのゼロ以上の値のコレクションを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SearchPanel.VisibleRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.SearchPanel"></see>が可視かどうかを示す値を取得または設定します。
            </summary>
      <value>
        可視の場合はtrue;それ以外の場合は、false。
      </value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.SearchPanel.EnabledRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.SearchPanel"></see>が有効になっているかどうかを示す値を取得または設定します。
            </summary>
      <value>
        有効の場合はtrue;それ以外の場合は、false。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ThumbnailsPanel.VisibleRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.ThumbnailsPanel"></see>が可視かどうかを示す値を取得または設定します。
            </summary>
      <value>
        可視の場合はtrue;それ以外の場合は、false。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.ThumbnailsPanel.EnabledRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.ThumbnailsPanel"></see>が有効になっているかどうかを示す値を取得または設定します。
            </summary>
      <value>
        有効の場合は<c>true</c>;それ以外の場合は、<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.TocPanel.VisibleRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.TocPanel"></see>が可視かどうかを示す値を取得または設定します。
            </summary>
      <value>
        可視の場合はtrue;それ以外の場合は、false。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.TocPanel.EnabledRuntime">
      <summary>
            実行時にこの<see cref="T:GrapeCity.ActiveReports.Viewer.Win.TocPanel"></see>が有効になっているかどうかを示す値を取得または設定します。
            </summary>
      <value>
        有効の場合は<c>true</c>;それ以外の場合は、<c>false</c>。</value>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.WndProc(System.Windows.Forms.Message@)">
      <summary>
            オーバーライドされました。ウィンドウメッセージを処理します。
            </summary>
      <param name="m">ウィンドウメッセージです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.OnFontChanged(System.EventArgs)">
      <summary>
            オーバーライドされました。<see cref="E:System.Windows.Forms.Control.FontChanged"></see>イベントを発生します。
            </summary>
      <param name="e">イベントのデータを含む<see cref="T:System.EventArgs"></see>です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>
            オーバーライドされました。コマンド キーを処理します。
            </summary>
      <param name="msg">処理するウィンドウ メッセージを表す、参照渡しされた<see cref="T:System.Windows.Forms.Message"></see>です。</param>
      <param name="keyData">処理するキーを表す<see cref="T:System.Windows.Forms.Keys"></see>値の 1 つ。</param>
      <returns>文字がコントロールによって処理された場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Dispose(System.Boolean)">
      <summary> 
            使用されているリソースをクリーンアップをします。
            </summary>
      <param name="disposing">マネージリソースを解放する必要がある場合は、true。それ以外の場合は、false。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.Print(GrapeCity.Viewer.Common.PrintingSettings)">
      <summary>
            現在開かれているドキュメントを印刷します（セクションまたはページ）。
            </summary>
      <param name="settings">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.LoadDocument(GrapeCity.Viewer.Common.IDocumentLoader)">
      <summary>
            指定されたドキュメントのローダーでドキュメントを読み込みます。
            </summary>
      <param name="parameter">キュメントのローダーです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.IsFplDocumentOpened">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.OnAction(System.Object,GrapeCity.ActiveReports.Viewer.Win.Viewer.ActionEventArgs)">
      <summary>
            ヘルパーメッソドは適切な時にRenderingCompletedイベントを発生します。</summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.GalleyMode">
      <summary>
            レポートのGalleyModeを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.MultiPageRows">
      <summary>
            ビューワがMultiPageModeにあるときに垂直方向に表示するページ数を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.MultiPageCols">
      <summary>
            ビューワがMultiPageModeにあるときに垂直方向に表示するページ数を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ReportViewer">
      <summary>
            パブリックAPI。下位互換性のために公開します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.TabTitleLength">
      <summary>
            Not used anymore.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.DisplayUnits">
      <summary>
            Not used anymore.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Viewer.Win.Viewer.ViewerToolbar.ToString">
      <summary>
            このインスタンスの値を等価の文字列形式に変換します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Viewer.Win.Viewer.ViewerToolbar.Font">
      <summary>
            コントロールにテキストを表示するために使用するフォントを取得または設定します。
            </summary>
      <value>コントロールにテキストを表示するために使用されたフォントです。</value>
    </member>
    <member name="T:GrapeCity.ActiveReports.Viewer.Win.DisplayUnits">
      <summary>
            Not used anymore.
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.PrinterSettings">
      <summary>
            抽象的なプリンタ設定の実装。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PrinterSettings.GetPaperSize(System.String)">
      <summary>
            名前で用紙のサイズを取得します。プリンタが指定された用紙サイズをサポートしていない場合は、空のPaperSizeインスタンスを返します。
            </summary>
      <param name="sizeName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PrinterSettings.PopulatePaperSizes">
      <summary>
            呼び出されたときに、特定のプリンタの利用可能な用紙サイズが表示されます。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PrinterSettings.PaperSizes">
      <summary>
            サポートされている用紙サイズを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PrinterSettings.PrinterName">
      <summary>
            プリンタ名を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IServiceContainer">
      <summary>
            サービスのコンテナを提供します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IServiceContainer.AddService``1(``0)">
      <summary>
            指定されたサービスをサービスコンテナに追加します。
            </summary>
      <typeparam name="T">追加するサービスのタイプ。 </typeparam>
      <param name="serviceInstance">追加するサービスタイプのインスタンス。このオブジェクトは、serviceTypeパラメータで指定された型を実装または継承する必要があります。 </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IServiceContainer.RemoveService``1">
      <summary>
            指定されたサービスタイプをサービスコンテナから削除します。
            </summary>
      <typeparam name="T">削除するサービスのタイプ。</typeparam>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IServiceContainer.GetService``1">
      <summary>
            コンテナからサービスを取得します。
            </summary>
      <returns>サービスが見つからない場合はServiceまたはnull。</returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.CachedMap`2">
      <summary>
            マッピングされたデータをキャッシュすることにより、コレクションとコレクションをマップします。
            </summary>
      <typeparam name="TSource">ソースコレクションのタイプ</typeparam>
      <typeparam name="TValue">コレクションに格納された値</typeparam>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.CachedMap`2.#ctor(System.Int64,`0,System.Func{System.Int32,`1},System.Action{System.Int32,`1})">
      <summary>
            Ctor
            </summary>
      <param name="capacity">キャッシュ容量。</param>
      <param name="collection">
      </param>
      <param name="mapItem">コレクションの特定の項目を取得する関数。</param>
      <param name="releaseItem">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.CachedMap`2.ClearCache">
      <summary>
            キャッシュをクリアします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.CachedMap`2.RaiseItemChanged(System.Int32)">
      <summary>
            キャッシュ項目の変更について加入者に通知します。
            </summary>
      <param name="index">
      </param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.CachedMap`2.Item(System.Int32)">
      <summary>
            キャッシュからインデックスで値を取得します。
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.CachedMap`2.Count">
      <summary>
            想定される項目の数を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.CacheFormat">
      <summary>
            利用可能なキャッシュフォーマット
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Implementation.CacheFormat.Bitmap">
      <summary>
            ビットマップにキャッシュします。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Implementation.CacheFormat.Metafile">
      <summary>
            メタファイルにキャッシュします。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IHistoryApi">
      <summary>
            これは、ユーザーがHistoryServiceで処理するためのパブリックインターフェイスです。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IHistoryApi.MoveNext">
      <summary>
            移動履歴の次の画面へ移動します。  
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IHistoryApi.MovePrev">
      <summary>
            移動履歴の前の画面へ移動します。  
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IHistoryApi.Clear">
      <summary>
            履歴からページビューをクリアします。  
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.IHistoryApi.Count">
      <summary>
            履歴内のページビューの数を返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.IHistoryApi.Position">
      <summary>
            ナビゲーション履歴内の現在のページの位置を取得します。  
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.HistoryService">
      <summary>
            履歴を保持します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.HistoryService.Add(System.Int32)">
      <summary>
            指定したページ番号を履歴に追加します。
            </summary>
      <param name="pageNumber">ページ番号です。</param>
      <exception cref="T:System.InvalidOperationException">同じページに続けて2回移動することができません。</exception>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.HistoryService.Clear">
      <summary>
            履歴をクリアします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.HistoryService.IsEmpty">
      <summary>
            履歴が空であるかどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが空の場合は<c>true</c>。それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.HistoryService.Current">
      <summary>
            現在のページのインデックスを取得します。
            </summary>
      <value>現在です。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.HistoryService.Next">
      <summary>
            次のページのインデックスを取得します。
            </summary>
      <value>次です。</value>
      <exception cref="T:System.InvalidOperationException">次の履歴レコードはありません。</exception>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.HistoryService.HasNext">
      <summary>
            履歴に次のページインデックスがあるかどうかを示す値を取得します。
            </summary>
      <value>
        次がある場合は<c>true</c>;それ以外の場合は、<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.HistoryService.HasPrevious">
      <summary>
            履歴内に前のページのインデックスがあるかどうかを示す値を取得します。
            </summary>
      <value>
        前のページのインデックスが存在する場合は<c>true</c>。それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.HistoryService.Previous">
      <summary>
            前のページのインデックスを取得します。
            </summary>
      <value>前です。</value>
      <exception cref="T:System.InvalidOperationException">前の履歴レコードはありません。</exception>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.HistoryService.ChangeHandler">
      <summary>
            変更ハンドラーを取得または設定します。
            </summary>
      <value>変更ハンドラー。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.ItemCollectionExtensions">
      <summary>
            IItemCollectionインターフェイスのユーティリティメソッド。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.ItemCollectionExtensions.FromLambda``1(System.Func{System.Int32},System.Func{System.Int32,``0})">
      <summary>
            ラムダから新しいIItemCollectionインスタンスを作成します。
            </summary>
      <typeparam name="TR">
      </typeparam>
      <param name="getCount">
      </param>
      <param name="getItem">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.ItemCollectionExtensions.Map``2(GrapeCity.Viewer.Common.Implementation.IItemCollection{``0},System.Func{``0,``1})">
      <summary>
            IItemColection関数およびconverter関数で指定された項目を使用して、新しいIItemCollectionを作成します。
            </summary>
      <typeparam name="TI">ソースコレクション内の項目のタイプ。</typeparam>
      <typeparam name="TR">ターゲット コレクション内の項目のタイプ。</typeparam>
      <param name="source">ソースコレクションを表します。</param>
      <param name="f">converter関数。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.ItemCollectionExtensions.Map``2(GrapeCity.Viewer.Common.Implementation.IItemCollection{``0},System.Func{``0,System.Int32,``1})">
      <summary>
            IItemColection関数およびconverter関数で指定された項目を使用して、新しいIItemCollectionを作成します。
            </summary>
      <typeparam name="TI">ソースコレクション内の項目のタイプ。</typeparam>
      <typeparam name="TR">ターゲット コレクション内の項目のタイプ。</typeparam>
      <param name="source">ソースコレクションを表します。</param>
      <param name="f">converter関数。</param>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.SequenceCollection">
      <summary>
            通知を含む整数値のシーケンス。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.SequenceCollection.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Implementation.SequenceCollection">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.SequenceCollection.GetEnumerator">
      <summary>
            コレクションを反復処理する列挙子を返します。
            </summary>
      <returns>コレクションを反復処理するために使用できる　<see cref="T:System.Collections.Generic.IEnumerator`1"></see>。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.SequenceCollection.Add(System.Int32)">
      <summary>
            使用する必要がありません。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.SequenceCollection.Clear">
      <summary>
            使用する必要がありません。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.SequenceCollection.Contains(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1">
        </see> には、特定の値が含まれているかどうかを判定します。
            </summary>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1">
        </see>に配置するオブジェクト。</param>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1">
        </see>に　<paramref name="item"></paramref>　が見つかった場合はtrue、そうでない場合はfalse。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.SequenceCollection.CopyTo(System.Int32[],System.Int32)">
      <summary>
            使用する必要がありません。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.SequenceCollection.Count">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1">
        </see>　に含まれる要素の数を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.SequenceCollection.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1">
        </see>　が読み取り専用かどうかを示す値を取得します。
            </summary>
    </member>
    <member name="E:GrapeCity.Viewer.Common.Implementation.SequenceCollection.CollectionChanged">
      <summary>
            コレクションの項目のリストが変更されたとき、またはコレクションがリセットされたときに発生します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind">
      <summary>
            注釈の種類
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind.None">
      <summary>
            人工種
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind.Text">
      <summary>
            テキスト注釈
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind.Circle">
      <summary>
            円形の注釈
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind.Square">
      <summary>
            正方形の注釈
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind.Arrow">
      <summary>
            矢印の注釈
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind.Balloon">
      <summary>
            バルーン注釈
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind.Line">
      <summary>
            線注釈
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationKind.Image">
      <summary>
            画像注釈
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Annotations.Selection">
      <summary>
            選択された注釈項目を定義します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.Selection.Empty">
      <summary>
            空の選択インスタンスを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.Selection.PageIndex">
      <summary>
            注釈が属するページを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.Selection.IsEmpty">
      <summary>
            選択が空の場合にtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.Selection.Items">
      <summary>
            選択されている項目を取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.HandlerExtensions.Chain(GrapeCity.Viewer.Common.Model.Interactivity.IActionHandler,GrapeCity.Viewer.Common.Model.Interactivity.IActionHandler)">
      <summary>
            既存のハンドラに別のハンドラを連鎖します。
            </summary>
      <param name="h1">
      </param>
      <param name="h2">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.ChangeResult">
      <summary>
            IInteractiveDocument.ProcessOnclickメソッドの定義済みの結果。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.ChangeResult.#ctor(GrapeCity.Viewer.Common.Model.Interactivity.ChangeType,GrapeCity.Viewer.Common.Model.Interactivity.IAction)">
      <summary>
            ChangeResultクラスの新しいインスタンスを初期化します。
            </summary>
      <param name="changeType">
      </param>
      <param name="action">
      </param>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Interactivity.ChangeResult.Empty">
      <summary>
            空の結果インスタンスを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Interactivity.ChangeResult.ChangeType">
      <summary>
            変更のタイプを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Interactivity.ChangeResult.Action">
      <summary>
            結果に関連付けられたアクションを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.IAction">
      <summary>
            レポート項目のアクションのインタフェース。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.ChangeType">
      <summary>
            レポートドキュメントに指定された変更の種類。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.DefaultActionHandler">
      <summary>
            デフォルトのドキュメントアクションハンドラ。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.DefaultActionHandler.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel,GrapeCity.Viewer.Common.Model.ReportPaneModel,System.Action{System.String},System.Func{GrapeCity.Viewer.Common.Model.Interactivity.IActionHandler})">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.Interactivity.DefaultActionHandler">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.DefaultActionHandler.ProcessAction(GrapeCity.Viewer.Common.Model.Interactivity.IAction)">
      <summary>
            レポートアクション用にカスタムハンドラを提供します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.DefaultActionHandler.Drillthrough(GrapeCity.Viewer.Common.Model.Interactivity.DrillthroughAction)">
      <summary>
            指定されたドリルアクションでドリルスルーします。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.HyperlinkAction">
      <summary>
            ハイパーリンクのアクションを記述します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.HyperlinkAction.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.Interactivity.HyperlinkAction">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="url">URLです。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Interactivity.HyperlinkAction.Url">
      <summary>
            URLを取得します。
            </summary>
      <value>URLです。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.BookmarkAction">
      <summary>
            ブックマーク動作について説明します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Interactivity.BookmarkAction.TargetPage">
      <summary>
            対象のページを取得します。
            </summary>
      <value>対象のページです。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Interactivity.BookmarkAction.TargetArea">
      <summary>
            対象の領域を取得します。
            </summary>
      <value>対象の領域です。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.DrillthroughAction">
      <summary>
            ドリルスルー動作について説明します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Interactivity.DrillthroughAction.TargetReport">
      <summary>
            対象のレポートを取得します。
            </summary>
      <value>対象のレポートです。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel">
      <summary>
            レポートページレイアウトまたは拡大縮小のオプション。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel.SupportedPagesPerSheet">
      <summary>
            シートあたりサポートされているページ数。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel.CreateDefault">
      <summary>
            デフォルトのインスタンスを作成します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel.Clone">
      <summary>
            ディープコピーを返します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel.PageScaling">
      <summary>
            スケーリングモードを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel.PagesPerSheet">
      <summary>
            シートに印刷するページ数（有効値は2,4,8）。
            「Multiple pages per sheet」モードでのみ使用できます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel.PagesOrder">
      <summary>
            「Multiple pages per sheet」モードでのみ使用できます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel.IsPrintPageBorder">
      <summary>
            N-up印刷時に、トリミングボックス（レポートページのページ境界）を描画します。
           「Multiple pages per sheet」モードでのみ使用できます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.LayoutSettingsModel.IsAutoRotatePages">
      <summary>
            プリンタのプロパティで指定された方向に合わせてページの向きを調整します。
            「Multiple pages per sheet」モードでのみ使用できます。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.Orientation">
      <summary>
            用紙の向きを指定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.PageScalingMode">
      <summary>
            ページの拡大/縮小を指定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.PageSettingsModel">
      <summary>
            物理的な用紙の設定のモデル。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PageSettingsModel.CreateDefault">
      <summary>
            初期化されたユーザーフレンドリーなデフォルトを含めて新しいインスタンスを作成します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PageSettingsModel.Clone">
      <summary>
            ディープコピーを返します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSettingsModel.PaperOrientation">
      <summary>
            用紙の向きを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSettingsModel.PaperSize">
      <summary>
            用紙サイズを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSettingsModel.Margins">
      <summary>
            ページの余白を取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel">
      <summary>
            「詳細ページ設定」機能に関連するすべてのページまたはスケーリング設定を指定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.CreateDefault">
      <summary>
            初期化されたすべてのデフォルトを含むPageSetupモデルの新しいインスタンスを作成します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.Document">
      <summary>
            現在表示されているドキュメントを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.CurrentPageIndex">
      <summary>
            現在のページインデックスを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.LayoutSettings">
      <summary>
            レイアウトオプションまたはスケーリングオプションを指定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.Watermark">
      <summary>
            ウォーターマークプの設定を指定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.PageSettings">
      <summary>
            指定された物理ページの設定。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.PrinterSettings">
      <summary>
            現在のプリンタ設定を指定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.PagesOrder">
      <summary>
            ページの印刷順序を指定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize">
      <summary>
            名前付き用紙サイズを指定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.GetSizeIn">
      <summary>
            用紙サイズ（インチ単位で）を取得します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.CompareTo(GrapeCity.Viewer.Common.Model.PageSetup.PaperSize)">
      <summary>
            現在のサイズのディメンションのいずれかが別のインスタンスのディメンションより小さい場合は、負の値を返します。
            </summary>
      <param name="other">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.Name">
      <summary>
            用紙フォーマットの名前を取得します。
            </summary>
      <value>名前です。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.Units">
      <summary>
            用紙サイズの単位を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.Size">
      <summary>
            サイズを取得します
            </summary>
      <value>サイズを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.IsEmpty">
      <summary>
            サイズは、空のサイズ（設定されていない）を表す場合はtrueを設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSizeUnit">
      <summary>
            ネイティブ用紙サイズの単位を指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PaperSizeUnit.US">
      <summary>
            サイズはインチ単位で指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PaperSizeUnit.Metric">
      <summary>
            用紙サイズはメートル単位（cm）で指定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel">
      <summary>
            ウォーターマーク設定。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel.CreateDefault">
      <summary>
            ユーザフレンドリなデフォルトをすべて初期化して、新しいインスタンスを作成します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel.Clone">
      <summary>
            ディープコピーを返します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel.Text">
      <summary>
            ウォーターマークテキスト
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel.FontFamily">
      <summary>
            フォントファミリ名
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel.FontSize">
      <summary>
            ウォーターマークのフォントサイズ（ポイント単位）
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel.TextColor">
      <summary>
            前景の色
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel.Angle">
      <summary>
            テスト回転角度（度単位で、反時計回り）
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.PageSetup.WatermarkSettingsModel.DrawOver">
      <summary>
            このプロパティがtrueの場合は、ウォーターマークのマークがレポートコンテンツ上のページに描画されます。そうでない場合は、他のすべてのレポートコンテンツの前にウォーターマークが描画されます。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions">
      <summary>
            通知の伝達ヘルパーを実装します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.Listen``1(``0,System.Action{System.String})">
      <summary>
            プロパティの変更通知を待機します。
            </summary>
      <typeparam name="TModel">
      </typeparam>
      <param name="model">
      </param>
      <param name="action">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.Listen``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Action)">
      <summary>
            特定のプロパティ変更に対して特定のアクションを実行します。
            </summary>
      <typeparam name="TModel">
      </typeparam>
      <typeparam name="TValue">
      </typeparam>
      <param name="model">
      </param>
      <param name="getter1">
      </param>
      <param name="action">
      </param>
      <returns>Disposeのときにイベントを登録解除するIDisposableインスタンス。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.Listen``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Action{``0})">
      <summary>
            特定のプロパティ変更に対して特定のアクションを実行します。
            </summary>
      <typeparam name="TModel">
      </typeparam>
      <typeparam name="TValue">
      </typeparam>
      <param name="model">
      </param>
      <param name="getter1">
      </param>
      <param name="action">
      </param>
      <returns>Disposeのときにイベントを登録解除するIDisposableインスタンス。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.Listen``3(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Action)">
      <summary>
            ネストされたプロパティのサポートを使用して、特定のプロパティ変更に対して特定のアクションを実行します。
            </summary>
      <typeparam name="TModel1">
      </typeparam>
      <typeparam name="TModel2">プロパティが参照するモデルの型。</typeparam>
      <typeparam name="TValue">
      </typeparam>
      <param name="model">
      </param>
      <param name="getter1">第1レベルのプロパティを取得します。</param>
      <param name="getter2">ネストされたプロパティを取得します。</param>
      <param name="action">プロパティーが変更されたときに実行するアクション。</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.ListenCollection``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Action{GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs})">
      <summary>
            特定のCollectionChangedイベントの時に特定のアクションを実行します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.GetPropertyName``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
            プロパティ名を取得します。
            </summary>
      <typeparam name="TI">
      </typeparam>
      <typeparam name="TR">
      </typeparam>
      <param name="instance">
      </param>
      <param name="propertyGetter">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.Observe``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Action{``1},System.Action{``1})">
      <summary>
            より洗練の場合はリスナーの実装を変更します。
            </summary>
      <typeparam name="T">
      </typeparam>
      <typeparam name="TI">
      </typeparam>
      <param name="obj">
      </param>
      <param name="getterExpr">
      </param>
      <param name="leave">古い値に対するアクション。</param>
      <param name="enter">新しい値に対するアクション。</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.Observe``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``1,System.IDisposable})">
      <summary>
            コンテナプロパティの実装を監視します。
            </summary>
      <typeparam name="T">
      </typeparam>
      <typeparam name="TI">
      </typeparam>
      <param name="obj">
      </param>
      <param name="getterExpr">
      </param>
      <param name="subscribe">ネストされたプロパティに登録済み。</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.ObserveRangeOnStaticCollection``1(GrapeCity.Viewer.Common.Implementation.IItemCollection{``0},GrapeCity.Viewer.Common.Model.Observable{GrapeCity.Viewer.Common.Model.Range},System.Func{``0,System.Int32,System.IDisposable})">
      <summary>
            通常の項目コレクションの変更可能な範囲を監視します。
            </summary>
      <typeparam name="T">コレクション要素のタイプ。</typeparam>
      <param name="list">監視するコレクション。</param>
      <param name="subscribeItem">アイテムハンドラ。</param>
      <param name="observedRange">要素内で監視するフローティング範囲。</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.ObserveRange``1(GrapeCity.Viewer.Common.Implementation.INotificationCollection{``0},System.Func{``0,System.Int32,System.IDisposable},GrapeCity.Viewer.Common.Model.Observable{GrapeCity.Viewer.Common.Model.Range})">
      <summary>
            変更可能なコレクションの変更可能な範囲を監視します。
            </summary>
      <typeparam name="T">コレクション要素のタイプ。</typeparam>
      <param name="list">監視するコレクション。</param>
      <param name="subscribeItem">アイテムハンドラ。</param>
      <param name="range">要素内で監視するフローティング範囲。</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.ObserveList``1(GrapeCity.Viewer.Common.Implementation.INotificationCollection{``0},System.Func{``0,System.Int32,System.IDisposable})">
      <summary>
            監視された変更可能なコレクション。
            </summary>
      <typeparam name="TI">
      </typeparam>
      <param name="list">
      </param>
      <param name="subscribeItem">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.ObserveList``1(GrapeCity.Viewer.Common.Implementation.INotificationCollection{``0},System.Func{``0,System.Int32,System.IDisposable},System.Action{``0})">
      <summary>
            監視された変更可能なコレクション。
            </summary>
      <typeparam name="TI">
      </typeparam>
      <param name="list">
      </param>
      <param name="subscribeItem">
      </param>
      <param name="removedAction">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModelListenExtensions.ObserveList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.IDisposable})">
      <summary>
            読み取り専用コレクション内のすべての項目を監視します。
            </summary>
      <typeparam name="TI">
      </typeparam>
      <param name="list">
      </param>
      <param name="subscribeItem">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.BitmapCachedDocumentModel">
      <summary>
            ビットマップでページ積極的にキャッシュします。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Bookmark">
      <summary>
            ブックマークを表します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Bookmark.Empty">
      <summary>
            空のブックマークインスタンス（nullオブジェクト）を取得します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Bookmark.PageIndex">
      <summary>
            ブックマークが付いたページのインデックス。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Bookmark.Area">
      <summary>
            ページ内の「Hot area」。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Bookmark.Name">
      <summary>
            ブックマークの名前
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Dock">
      <summary>
            項目の配置を指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Dock.Bottom">
      <summary>
            コントロールは下側に配置されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Dock.Left">
      <summary>
            コントロールは左側に配置されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Dock.Right">
      <summary>
            コントロールは右側に配置されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Dock.Top">
      <summary>
            コントロールは上側に配置されます。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.DocumentSelection">
      <summary>
            選択したドキュメント項目を表します。これは不変オブジェクトです！
この実装は、特定のページの「ページアイテム」のコレクションとして選択を処理するため、実装にバインドされています
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentSelection.#ctor(System.Int32,System.Collections.Generic.IEnumerable{GrapeCity.Viewer.Common.Model.DocumentModel.IPageItem})">
      <summary>
            Selectionクラスの新しいインスタンスを初期化します。
            </summary>
      <param name="pageIndex">
      </param>
      <param name="items">
      </param>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.DocumentSelection.Empty">
      <summary>
            空のインスタンスを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentSelection.Append(System.Collections.Generic.IEnumerable{GrapeCity.Viewer.Common.Model.DocumentModel.IPageItem})">
      <summary>
            新しい選択を現在の値として返します。
            </summary>
      <param name="items">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentSelection.IsEmpty">
      <summary>
            選択が空の場合にtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentSelection.PageIndex">
      <summary>
            選択項目が属するページを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentSelection.Items">
      <summary>
            現在選択されている項目を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ErrorInfo">
      <summary>
            エラーまたは例外に関する情報を表します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ErrorInfo.#ctor(System.Exception)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.ErrorInfo">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ErrorInfo.#ctor(GrapeCity.Viewer.Common.Model.ErrorInfo.Level,System.String)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.ErrorInfo">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ErrorInfo.Severity">
      <summary>
            エラーレベルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ErrorInfo.Exception">
      <summary>
            例外を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ErrorInfo.Info">
      <summary>
            エラー情報を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ExportType">
      <summary>
            ExportType列挙型
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.FindOptions">
      <summary>
            テキスト別検索の設定を表します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.FindOptions.Text">
      <summary>
            検索するテキスト。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.FindOptions.MatchCase">
      <summary>
            検索で大文字と小文字を区別するかどうかを指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.FindOptions.WholeWord">
      <summary>
            指定された単語単位だけを検索するかどうかを指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.FindOptions.SearchBackward">
      <summary>
            検索を逆順で実行するかどうかを指定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.FindOptions.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.FindOptions">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="text">テキストです。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.FindOptions.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.FindOptions">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.FindOptions.Equals(System.Object)">
      <summary>
            指定された<see cref="T:System.Object"></see>がこのインスタンスと等しいかどうかを判定します。
            </summary>
      <param name="o">このインスタンスと比較する<see cref="T:System.Object"></see>。</param>
      <returns>
        指定された<see cref="T:System.Object"></see>がこのインスタンスと等しい場合は<c>true</c>。それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.FindOptions.Equals(GrapeCity.Viewer.Common.Model.FindOptions)">
      <summary>
            指定された<see cref="T:GrapeCity.Viewer.Common.Model.FindOptions"></see>がこのインスタンスと等しいかどうかを判定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.FindOptions.GetHashCode">
      <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.FindOptions.ToString">
      <summary>
            このインスタンスを表す<see cref="T:System.String"></see>を返します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Frame">
      <summary>
            選択の領域を表します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Frame.#ctor(System.Int32,GrapeCity.Viewer.Common.Rect)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.Frame">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
      <param name="pageIndex">ページのインデックス。</param>
      <param name="frame">フレームです。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Frame.PageIndex">
      <summary>
            選択範囲を含むページを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Frame.Bounds">
      <summary>
            ページ座標内のフレームを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Frame.IsEmpty">
      <summary>
            選択が空である場合はtrueを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.HighlightArea">
      <summary>
            レポートページ内のハイライト領域を識別します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.HighlightArea.Bounds">
      <summary>
            領域の境界を取得します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.HighlightArea.AreaType">
      <summary>
            領域の種類を取得します（異なる色で描画される可能性があります）。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.HighlightArea.Type">
      <summary>
            領域の種類。領域は種類によって少し違った形で描画されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.HighlightArea.Type.Selection">
      <summary>
            選択領域の種類
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.HighlightArea.Type.Search">
      <summary>
            検索領域の種類
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.HighlightArea.Type.SelectionFrame">
      <summary>
            選択フレーム領域の種類
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.HighlightDocumentViewModel">
      <summary>
            ドキュメントごとにハイライトするモデルを実装します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.HighlightPage">
      <summary>
            不変ページハイライトのビューモデル
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.HighlightPage.Empty">
      <summary>
            項目がないハイライトレイヤーを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.HighlightPage.IsEmpty">
      <summary>
            レイヤーに何もない場合にtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.HighlightPage.Areas">
      <summary>
            レイヤー内のすべてのハイライト領域を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.IExportableReport">
      <summary>
            エクスポートをサポートするレポート。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.IExportableReport.ExportToStream(GrapeCity.Viewer.Common.Model.ExportType,System.IO.Stream)">
      <summary>
            レポートをストリームにエクスポートします。
            </summary>
      <param name="type">exportType</param>
      <param name="toStream">書き込みストリーム</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IExportableReport.ExportFormats">
      <summary>
            サポートされているエクスポート形式
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ExportFormatInfo">
      <summary>
            ExportFormatInfo
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ExportFormatInfo.#ctor(GrapeCity.Viewer.Common.Model.ExportType,System.String,System.String)">
      <summary>
            ExportFormatInfo
            </summary>
      <param name="exportType">exportType</param>
      <param name="displayName">displayexportname</param>
      <param name="extension">extension</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ExportFormatInfo.ExportType">
      <summary>
            ExportType
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ExportFormatInfo.DisplayName">
      <summary>
            DisplayName
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ExportFormatInfo.Extension">
      <summary>
            Extension
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ExportFormatInfo.FilterString">
      <summary>
            フィルター文字列を取得します
            </summary>
      <returns>FilterString</returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ReportParameterType">
      <summary>
            パラメータの値のデータ型を取得します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportParameterType.String">
      <summary>
            文字列型パラメータを指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportParameterType.DateTime">
      <summary>
            DateTimeパラメータ型を指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportParameterType.Bool">
      <summary>
            boolパラメータ型を指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportParameterType.Int">
      <summary>
            intパラメータ型を指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportParameterType.Float">
      <summary>
            floatパラメータの型を指定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ErrorState">
      <summary>
            現在のパラメータの状態を定義します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.RelativeDatePart">
      <summary>
            DateTimeパラメータに対して相対日付の一部を定義します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.RelativeDatePart.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.RelativeDatePart">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.MouseMode">
      <summary>
            可能なマウスモードを指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.MouseMode.Default">
      <summary>
            既定のモード。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.MouseMode.Pan">
      <summary>
            パンモードです。これにより、ページを移動することができます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.MouseMode.Snapshot">
      <summary>
            このモードでは、選択された領域のスナップショットが作成されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.MouseMode.CopySelect">
      <summary>
            このモードでは、選択した領域をコピーすることができます。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Observable`1">
      <summary>
            監視可能な値。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Observable`1.#ctor(`0)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.Observable`1">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="value">値です。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Observable`1.Value">
      <summary>
            監視可能（observable）の値を取得または設定します。
            </summary>
    </member>
    <member name="E:GrapeCity.Viewer.Common.Model.Observable`1.PropertyChanged">
      <summary>
            プロパティの値が変更されたときに発生します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ObservableExtensions">
      <summary>
            ヘルパーメソッドによって<see cref="T:GrapeCity.Viewer.Common.Model.Observable`1"></see>を拡張します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ObservableExtensions.AsObservable``1(``0)">
      <summary>
            型を監視可能な値に折り返します。
            </summary>
      <typeparam name="T">
      </typeparam>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ObservableExtensions.AsObservableCollection``1(System.Collections.Generic.IList{``0})">
      <summary>
            リストを監視可能なコレクションに折り返します。
            </summary>
      <typeparam name="T">
      </typeparam>
      <param name="list">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ParameterizedReportExtensions">
      <summary>
            パラメータを含むレポートのヘルパー。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ParameterizedReportExtensions.SetParameter(GrapeCity.Viewer.Common.Model.IParameterizedReport,System.String,System.Collections.Generic.IEnumerable{System.Object})">
      <summary>
            レポート内のパラメータの値を更新します。
            </summary>
      <param name="parameterizedReport">更新するパラメータを含むレポート。</param>
      <param name="name">更新するパラメータの名前。</param>
      <param name="values">パラメータの新しい値。</param>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Range">
      <summary>
            任意の範囲の実装。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Range.Start">
      <summary>
            Rangeの開始です。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Range.Length">
      <summary>
            Rangeの広さです。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Range.Empty">
      <summary>
            空の範囲を取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.Range">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
      <param name="value">Rangeの開始です。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.#ctor(System.Int32,System.Nullable{System.Int32})">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Model.Range">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
      <param name="start">範囲の開始です。</param>
      <param name="length">範囲の広さです。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.Contains(System.Int32)">
      <summary>
            範囲に特定の項目が含まれている場合はtrueを取得します。 
            </summary>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.Equals(System.Object)">
      <summary>
            指定された<see cref="T:System.Object"></see>がこのインスタンスと等しいかどうかを判定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.Equals(GrapeCity.Viewer.Common.Model.Range)">
      <summary>
            指定された<see cref="T:GrapeCity.Viewer.Common.Model.Range"></see>がこのインスタンスと等しいかどうかを判定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.GetHashCode">
      <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.ToString">
      <summary>
            このインスタンスを「開始-終了」形式で表す<see cref="T:System.String"></see>を返します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.Parse(System.String,System.Boolean)">
      <summary>
            文字列入力をRangeに解析します。
            </summary>
      <param name="input">
      </param>
      <param name="isZeroBased">ゼロから始まる場合は、true。</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.Translate(GrapeCity.Viewer.Common.Model.Range,System.Int32)">
      <summary>
            OpenEndごとに、シフト値で範囲を変換します。
            </summary>
      <param name="original">
      </param>
      <param name="shift">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Range.For(System.Int32,System.Int32)">
      <summary>
            開始点と終了点から新しい範囲を初期化します。
            </summary>
      <param name="start">
      </param>
      <param name="end">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Range.End">
      <summary>
            範囲の終了直後の最初の位置を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Range.IsEmpty">
      <summary>
            範囲が空の場合はtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Range.IsEndOpen">
      <summary>
            このRangeの最後がint.MaxValueに等しいかどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが開放端である場合は<c>true</c>。それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.RunOptions">
      <summary>
            「Run」コマンドのオプション。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ReportPaneModel">
      <summary>
            レポートペイン用のモデル。
            </summary>
      <summary>
            レポートペイン用のモデル。
            これは、部分クラスで、WPFプロジェクトで異なる定義を持つ_zoomsフィールドのみを含みます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportPaneModel.MinZoomValue">
      <summary>
            最小ズーム値
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportPaneModel.MaxZoomValue">
      <summary>
            最大ズーム値
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.History">
      <summary>
            現在のレポートペインの履歴を提供します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.CurrentPageIndex">
      <summary>
            現在のページインデックスを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.ZoomMode">
      <summary>
            現在のズームモードを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.ViewType">
      <summary>
            現在のドキュメントの表示方法を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.ZoomValue">
      <summary>
            明示的なズーム値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.ScrollArea">
      <summary>
            プロパティが割り当てられたときに、現在のページ内で表示される必要がある領域を指定するNotificationプロパティ。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.RowsCount">
      <summary>
            複数ページビューの行数を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.ColumnsCount">
      <summary>
            複数ページビューの列数を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.IsActive">
      <summary>
            現在のレポートペインがアクティブであることを示す値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.MouseMode">
      <summary>
            現在のマウスモードを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.SelectionFrame">
      <summary>
            選択フレームを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ReportPaneModel.PageOffset">
      <summary>
            ar6公開APIのレガシー
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.SearchResult">
      <summary>
            テキスト検索結果を表します。
クラスのインスタンスは不変であり、INotifyPropertyChangedを実装しません。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SearchResult.PageIndex">
      <summary>
            インスタンスが見つかったページのインデックス。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SearchResult.DisplayText">
      <summary>
            表示するテキスト。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SearchResult.ItemArea">
      <summary>
            全テキストアイテム領域の座標。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SearchResult.ItemIndex">
      <summary>
            論理ページ項目の数を取得または設定します（その後の検索、順序付けのため）。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SearchResult.Range">
      <summary>
            選択テキストの範囲
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SearchResult.PastEnd">
      <summary>
            検索が終了したことを示す結果
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SearchResult.BeforeBegin">
      <summary>
            ドキュメントまたはページの先頭から検索を開始するFindメソッドの特別な結果値
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.SearchResult.Create(System.Int32,System.Int32,GrapeCity.Viewer.Common.Model.Range,System.String,GrapeCity.Viewer.Common.Rect)">
      <summary>
            新しいSearchResultインスタンスを作成します。
            </summary>
      <param name="pageNumber">
      </param>
      <param name="itemIndex">
      </param>
      <param name="range">
      </param>
      <param name="displayText">
      </param>
      <param name="itemArea">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.SearchResult.Create(System.Int32,System.Int32,GrapeCity.Viewer.Common.Model.Range)">
      <summary>
            新しいSearchResultインスタンスを作成します。
            </summary>
      <param name="pageNumber">
      </param>
      <param name="itemIndex">
      </param>
      <param name="range">
      </param>
      <param name="displayText">
      </param>
      <param name="itemArea">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.SearchResult.IsValid">
      <summary>
            SearchResultがPastEndまたはBeforeBegin（補助値）でないことを保証します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.SidebarTabs">
      <summary>
            サイドバー内で定義されたサイドバーパネルの位置（タブインデックスまたはアコーディオンペインインデックスのいずれか）。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SidebarTabs.Toc">
      <summary>
            目次のペイン
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SidebarTabs.Thumbs">
      <summary>
            サムネールのペイン
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SidebarTabs.Search">
      <summary>
            検索ペイン
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.SidebarTabs.Parameters">
      <summary>
            パラメーターペイン
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.TocTreeNode">
      <summary>
            ブックマークツリーノードを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.TocTreeNode.#ctor">
      <summary>
            シリアル化の必要がある場合だけ
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.TocTreeNode.#ctor(GrapeCity.Viewer.Common.Model.Bookmark)">
      <summary>
            TocTreeNodeクラスの新しいインスタンスを初期化します。
            </summary>
      <param name="bookmark">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.TocTreeNode.#ctor(GrapeCity.Viewer.Common.Model.Bookmark,System.Collections.Generic.IEnumerable{GrapeCity.Viewer.Common.Model.TocTreeNode})">
      <summary>
            TocTreeNodeクラスの新しいインスタンスを初期化します。
            </summary>
      <param name="bookmark">
      </param>
      <param name="nodes">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.TocTreeNode.Get(System.String)">
      <summary>
            Gets the nested toc node. 内部使用のみ。!
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.TocTreeNode.Get(GrapeCity.Viewer.Common.Model.Bookmark)">
      <summary>
            Gets the nested toc node. 内部使用のみ。!
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.TocTreeNode.Add(GrapeCity.Viewer.Common.Model.Bookmark)">
      <summary>
            コレクションに新しいノードを追加します。
            </summary>
      <param name="bookmark">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.TocTreeNode.Bookmark">
      <summary>
            ノードが含まれるブックマークのインスタンスを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.TocTreeNode.Nodes">
      <summary>
            リーフノードのネストされた目次ノードまたは空のリストを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.TocTreeNode.IsLeaf">
      <summary>
            ノードがリーフの場合trueを取得します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="E:GrapeCity.Viewer.Common.Model.TocTreeNode.CollectionChanged">
      <summary>
            コレクションの項目のリストが変更されたとき、またはコレクションがリセットされたときに発生します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.TouchMode">
      <summary>
            タッチモードを有効にするかどうか。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.TouchMode.True">
      <summary>
            タッチモードを有効にします。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.TouchMode.False">
      <summary>
            タッチモードを無効にします。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.TouchMode.Auto">
      <summary>
            エンドユーザ環境を自動的に検出します。エンドユーザ環境がタッチをサポートする場合、TouchModeはTrueとして機能します。そうはない場合、TouchModeはFalseとして機能します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.TouchModeButtonVisibility">
      <summary>
            ビューワのツールバー上にタッチモードのボタンを表示するかを指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.TouchModeButtonVisibility.Hidden">
      <summary>
            タッチモードのボタンを非表示にします。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.TouchModeButtonVisibility.Auto">
      <summary>
            エンドユーザ環境を自動的に検出します。アプリケーションがタッチ対応環境にある場合、タッチモードのボタンが表示されます。そうではない場合は表示されません。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ViewerModel">
      <summary>
            現在のビューのモデルを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.IErrorHandler.HandleError(System.Exception)">
      <summary>
            実行時のエラーについて報告します。
            </summary>
      <param name="exception">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.IErrorHandler.HandleError(GrapeCity.Viewer.Common.Model.ErrorInfo)">
      <summary>
            エラー、警告、または情報メッセージを報告します。
            </summary>
      <param name="error">
      </param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IDocumentConsumer.Document">
      <summary>
            ソースドキュメントを取得または設定します。Documentとは異なり、任意の処理は適用されずにドキュメントがロードされまています。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.IDocumentConsumer.ShowWaitMessage">
      <summary>
            「お待ちください」メッセージを表示するかどうかを設定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ViewerModel.AddActionHandler(GrapeCity.Viewer.Common.Model.Interactivity.IActionHandler)">
      <summary>
            アクションハンドラを追加します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ViewerModel.PushCurrentReport">
      <summary>
            現在読み込み中のレポートをスタックにプッシュします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ViewerModel.SetParameters(System.Collections.Generic.IEnumerable{GrapeCity.Viewer.Common.IParameter})">
      <summary>
            ロードされたモデルのパラメータ値を設定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ViewerModel.HandleError(System.Exception)">
      <summary>
            実行時のエラーについて報告します。
            </summary>
      <param name="exception">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ViewerModel.HandleError(GrapeCity.Viewer.Common.Model.ErrorInfo)">
      <summary>
            エラー、警告、または情報メッセージを報告します。
            </summary>
      <param name="error">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ViewerModel.ClearErrors">
      <summary>
            エラー一覧をクリアします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ViewerModel.RaiseDocumentChanged">
      <summary>
            ドキュメントが変更されたときにpropertychangedイベントを発生させます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.Report">
      <summary>
            レポートを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.ShowWaitMessage">
      <summary>
            レポートの最初のページが準備できていない間に「待機メッセージ」を表示する必要があります。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.Document">
      <summary>
            現在表示されているドキュメントを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.Annotations">
      <summary>
            現在表示されているドキュメントを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.PaperColor">
      <summary>
            ページの色を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.GrayedAreaColor">
      <summary>
            非アクティブなレポートペインを覆うに使用される部分的に透明な色を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.SearchResultForeColor">
      <summary>
            検索結果の前景色
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.SearchResultBackColor">
      <summary>
            検索結果の背景色
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.PagesBackColor">
      <summary>
            レポートペインの背景色。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.HyperlinkForeColor">
      <summary>
            ハイパーリンクのテキストの色を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.HyperlinkBackColor">
      <summary>
            ハイパーリンクの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.HyperlinkUnderline">
      <summary>
            ハイパーリンクに下線が引かれているかどうかを示す値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.UseHyperlinkSettings">
      <summary>
            システム定義テーマの代わりにハイパーリンク設定を使用するかどうかを示す値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.PrintingSettings">
      <summary>
            印刷設定を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.ScrollbarEnabled">
      <summary>
            公開API。レポートペイン内のスクロールを表示または非表示にします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.Margin">
      <summary>
            各ページの余白を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsSidebarVisible">
      <summary>
            サイドバーの可視性を取得または設定します（TOCビューとサムネイルビューが存在する場所）。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsTocVisible">
      <summary>
            TOCパネルの可視性を取得または設定します（SLV 2.0のみで使用）。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsTocEnabled">
      <summary>
            TOCパネルの有効なプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsSearchPanelVisible">
      <summary>
            Searchパネルの可視性を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsSearchPanelEnabled">
      <summary>
            Searchパネルの有効なプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsParamsPanelVisible">
      <summary>
            Paramsパネルの可視性を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsParamsPanelEnabled">
      <summary>
            Paramsパネルの有効なプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsThumbnailPanelVisible">
      <summary>
            Thumbnailパネルの可視性を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsThumbnailPanelEnabled">
      <summary>
            Thumbnailパネルの有効なプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.ActiveSidebarPane">
      <summary>
            現在表示されているサイドバータブを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.CurrentPane">
      <summary>
            現在選択されているレポートペインを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.PrimaryPane">
      <summary>
            プライマリレポートペインを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.SecondaryPane">
      <summary>
            セカンダリレポートペインを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsPrimaryPaneSelected">
      <summary>
            プライマリレポートペインが選択されている場合は取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.ThumbZoomValue">
      <summary>
            プライマリレポートペインが選択されている場合は取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.IsFindDialogVisible">
      <summary>
            検索ダイアログを表示するかどうかを示します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.AnnotationKind">
      <summary>
            注釈を表示するかどうか。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.AnnotationDropDownVisible">
      <summary>
            注釈のドロップダウンを表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.MouseModeButtonsVisible">
      <summary>
            マウスモードのボタンが表示されるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.TouchModeButtonVisibility">
      <summary>
            TouchModeボタンの可視性を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.TouchMode">
      <summary>
            ビューワがTouchMode中かどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.BackToParent">
      <summary>
            親レポートに戻るコマンドを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.OnAction">
      <summary>
            アクションに反応するコマンドを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.ViewerModel.Errors">
      <summary>
            エラー一覧を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ViewType">
      <summary>
            ビューワコントロールの可能なビューモード。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ViewType.SinglePage">
      <summary>
            1ページだけが表示されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ViewType.MultiPage">
      <summary>
            複数のページが表示されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ViewType.Continuous">
      <summary>
            複数のページが連続して表示されます。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.ZoomMode">
      <summary>
            定義されたZoomモード。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ZoomMode.Free">
      <summary>
            ズーム値は明示的に指定されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ZoomMode.FitWidth">
      <summary>
            コントロールを水平に合わせるように自動的にズーム値を設定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ZoomMode.FitPage">
      <summary>
            コントロールを垂直方向と水平方向の両方に合わせるようにズーム値を設定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ZoomMode.FitGrid">
      <summary>
            列数と行数に応じてズーム値を設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel">
      <summary>
            ドキュメントごとにハイライトするモデルを実装します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel.#ctor(GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook,GrapeCity.Viewer.Common.Model.ReportPaneModel)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel.ObserveRange(GrapeCity.Viewer.Common.Model.Observable{GrapeCity.Viewer.Common.Model.Range},System.Func{GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel,System.Int32,System.IDisposable})">
      <summary>
            範囲を監視するために登録します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel.Dispose">
      <summary>
            基になるモデルから登録解除します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel.PageCount">
      <summary>
            ページビューの数を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel.Count">
      <summary>
            ページ数を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel.Item(System.Int32)">
      <summary>
            指定されたページインデックスを含む<see cref="T:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel"></see>を取得します。
            </summary>
      <param name="pageIndex">ページのインデックス。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationBookViewModel.Book">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.AnnotationItemViewModel">
      <summary>
            注釈項目のViewModel。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.AnnotationItemViewModel.#ctor(GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.AnnotationItemViewModel">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.AnnotationItemViewModel.Dispose">
      <summary>
            モデルから登録解除します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationItemViewModel.Bounds">
      <summary>
            注釈項目の境界を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationItemViewModel.PaintBounds">
      <summary>
            注釈項目の境界を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationItemViewModel.InternalsUpdate">
      <summary>
            無効化のために使用されるダミープロパティ。 
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationItemViewModel.Annotation">
      <summary>
            注釈
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel">
      <summary>
            1ページ内の注釈を表します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.EmptyPage">
      <summary>
            nullオブジェクトを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.HitTest(System.Double,System.Double)">
      <summary>
            特定のビューポイントに関する情報を取得します。
            </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.Dispose">
      <summary>
            モデルから登録解除します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.Adorners">
      <summary>
            ページの装飾を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.Items">
      <summary>
            ページアイテム（１以上）を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.HitTestInfo">
      <summary>
            クリックされた注釈項目および装飾ハンドルを識別します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.HitTestInfo.CreateEmpty">
      <summary>
            空のヒットテスト情報を作成します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.HitTestInfo.IsEmpty">
      <summary>
            HitTestが空の結果を返した場合にtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.HitTestInfo.Item">
      <summary>
            クリックされた項目を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.AnnotationLayerViewModel.HitTestInfo.Handle">
      <summary>
            装飾ハンドルを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel">
      <summary>
            選択された注釈（これらに限定されない）項目の装飾。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.HandleSize">
      <summary>
            ハンドルのサイズを表します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.ButtonMargin">
      <summary>
            ボタンの余白サイズを表します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.ButtonSize">
      <summary>
            ボタンのサイズを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.HitTest(System.Double,System.Double)">
      <summary>
            ポイント内のハンドルを取得します。
            </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.Dispose">
      <summary>
            基になるモデルから登録解除します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.HostItem">
      <summary>
            現在の装飾がバインドされている注釈項目を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.Handles">
      <summary>
            ハンドルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.InnerBounds">
      <summary>
            内側の装飾領域の境界を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerViewModel.HighlightHandle">
      <summary>
            現在「ホバリング」されているハンドルを取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerHandle">
      <summary>
            装飾のポイントを説明します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerHandle.HandleType">
      <summary>
            装飾ハンドルのタイプ
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.BorderedAdornerHandle.Area">
      <summary>
            装飾の領域
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.AdornerHandleType">
      <summary>
            装飾"hot"ポイントを定義します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel">
      <summary>
            エラーウィンドウまたはダイアログのViewModel実装。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel,GrapeCity.Viewer.Common.IApplicationContext)">
      <summary>
            ErrorPaneViewModelクラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.HidePanel">
      <summary>
            エラーパネルを画面から非表示にします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.ShowDialog">
      <summary>
            詳細なエラーを表示します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.HideDialog">
      <summary>
            詳細なエラーを非表示します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.ClearErrors">
      <summary>
            エラーをクリアします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.Copy">
      <summary>
            エラーをクリップボードにコピーします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.IsPanelVisible">
      <summary>
            サムネイルタブを表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.IsDialogVisible">
      <summary>
            サムネイルタブを表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.IsDialogVisibleInvert">
      <summary>
             ShowDetailsボタンのvisibilityプロパティをバインドします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.MessageText">
      <summary>
            エラーメッセージを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.Errors">
      <summary>
             エラーのコレクションを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ErrorPaneViewModel.LastError">
      <summary>
             最終エラーを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel">
      <summary>
            検索ダイアログ用のビューモデル。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.FindNext">
      <summary>
            次の位置の検索を実行します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.FindPrevious">
      <summary>
            前の位置の検索を実行します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.Show">
      <summary>
            ダイアログを表示します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.Close">
      <summary>
            ダイアログを閉じます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.IsVisible">
      <summary>
            検索ダイアログが表示されるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.SearchString">
      <summary>
            ドキュメント内で検索する文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.MatchWholeWord">
      <summary>
            検索文字列が単語単位に一致する必要があるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.MatchCase">
      <summary>
            見つかったテキストが検索文字列の大文字と一致する必要があるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.Status">
      <summary>
            ユーザーに表示する文字列を取得または設定します。通常は、ドキュメントの終了または開始に達するときのイベントを表します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.UserMessage">
      <summary>
            ユーザーに表示する文字列を取得します。通常は、ドキュメントの終了または開始に達するときのイベントを表します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.FindDialogViewModel.SearchHistory">
      <summary>
            検索された文字列の履歴を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.FindStatus">
      <summary>
            操作の状態を検索します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.FindStatus.None">
      <summary>
            操作は正常に完了しました。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.FindStatus.EndOfPages">
      <summary>
            ドキュメントの最後に達しました。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.FindStatus.BeginningOfPages">
      <summary>
            ドキュメントの最初に達しました。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.FindStatus.NotFound">
      <summary>
            単一のインスタンスが見つかりませんでした。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel">
      <summary>
            複数ページビュー用のビューモデルを表示します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel">
      <summary>
            単一ページおよび複数ページビューの基本モデル。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel,GrapeCity.Viewer.Common.Model.ReportPaneModel)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="viewerModel">ビューワのモデル。</param>
      <param name="reportPaneModel">現在のレポートペインのモデル</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.PickModels(System.Action{GrapeCity.Viewer.Common.Model.ViewerModel,GrapeCity.Viewer.Common.Model.ReportPaneModel})">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.CreateAnnotationsRenderer(GrapeCity.Viewer.Common.Model.DocumentModel)">
      <summary>
            注釈のレンダラーを作成します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.HandleError(System.Exception)">
      <summary>
            実行時のエラーについて報告します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.IsUIEnabled">
      <summary>
            現在のドキュメントに表示可能なページが存在する場合はTrue。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.IsPanMode">
      <summary>
            現在のMouseModeがMouseMode.Panの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.IsCopySelectMode">
      <summary>
            現在のMouseModeがMouseMode.CopySelectの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.IsSnapshotMode">
      <summary>
            現在のMouseModeがMouseMode.Snapshotの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.ActionHandler">
      <summary>
            アクションハンドラを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.PaperColor">
      <summary>
            ドキュメント内のページの色。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.AnnotationLayer">
      <summary>
            注釈にビューモデルを提供します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.GrayedAreaColor">
      <summary>
            非アクティブなビューの色。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.Margin">
      <summary>
            ページの余白を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.ViewType">
      <summary>
            ビューワのビューモードを取得します。 ViewTypeがSingle Pageの場合は、ビューは複数ページモードから切り替える必要があります。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.Zoom">
      <summary>
            ビューのズーム値
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.CurrentPageIndex">
      <summary>
            現在のページインデックスを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.ZoomMode">
      <summary>
            ビューワの現在のズームモードを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.IsActive">
      <summary>
            親レポートペインがアクティブな場合にtrueを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.MouseMode">
      <summary>
            現在のレポートペインのマウスモードを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.Highlight">
      <summary>
            ハイライトドキュメントのビューモデルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.HighlightPage">
      <summary>
            ハイライトのページを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.AnnotationKind">
      <summary>
            現在の注釈の種類を返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.Annotations">
      <summary>
            現在の注釈を返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.Document">
      <summary>
            ドキュメントを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.AreBehaviorsEnabled">
      <summary>
            ビヘイビアーが実行されることが許される場合はtrueです。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.SearchResultForeColor">
      <summary>
            検索結果の前景色
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.SearchResultBackColor">
      <summary>
            検索結果の背景色
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.PagesBackColor">
      <summary>
            ページが表示される領域の色。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.ScrollbarEnabled">
      <summary>
            公開API。レポートペイン内のスクロールを表示または非表示にします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.PaperSize">
      <summary>
            現在アクティブなプリンタの用紙サイズを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.ShowWaitMessage">
      <summary>
            「お待ちください」のメッセージが表示されている場合はTrue。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeViewModel.HasError">
      <summary>
            内部使用のみ。 True if an error occurred while loading the report
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel.InvalidateCache">
      <summary>
            ページキャッシュをクリアします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel.Dispose">
      <summary>
            モデルから登録解除します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel.Pages">
      <summary>
            ページのコレクションを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel.AnnotationPages">
      <summary>
            ページのコレクションを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel.MaxPageSize">
      <summary>
            最大ページサイズを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel.Rows">
      <summary>
            複数ページビューの行数を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel.Columns">
      <summary>
            複数ページビューの列数を取得します。 
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.MultiPageViewModel.ScrollArea">
      <summary>
            現在のページ内の特定の領域にスクロールするようにビューに指示します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel">
      <summary>
            PageSetupダイアログのビューモデル
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.#ctor(GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel,GrapeCity.Viewer.Common.IApplicationContext)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PaperSizes">
      <summary>
            使用可能な用紙サイズ。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PaperSourceNames">
      <summary>
            用紙のソースの名前
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.CurrentPaperSourceName">
      <summary>
            現在クティブな用紙ソース
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.CurrentPaperSizeName">
      <summary>
            現在の用紙名
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.UnitsName">
      <summary>
            計測単位の名前
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PaperSizeIn">
      <summary>
            使用する用紙サイズ（インチ単位）。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PaperOrientation">
      <summary>
            用紙の向き。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PaperWidth">
      <summary>
            用紙の幅。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PaperHeight">
      <summary>
            用紙の高さ。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.IsPortrait">
      <summary>
            縦方向きであるかどうか
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.IsLandscape">
      <summary>
            横向きであるかどうか
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.LeftMargin">
      <summary>
            ページの左余白
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.RightMargin">
      <summary>
            ページの右余白
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.TopMargin">
      <summary>
            ページの上余白
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.BottomMargin">
      <summary>
            ページの下余白
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.MaxLeftMargin">
      <summary>
            ユーザーが設定できる最大の左余白
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.MaxRightMargin">
      <summary>
            ユーザーが設定できる最大の右余白
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.MaxTopMargin">
      <summary>
            ユーザーが設定できる最大の上余白
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.MaxBottomMargin">
      <summary>
            ユーザーが設定できる最大の下余白
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PageScalings">
      <summary>
            すべての可能なページスケーリング
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.CurrentPageScale">
      <summary>
            ページスケーリングの現在の値。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PagesPerSheet">
      <summary>
            SheetごとにPagesの可能な値
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.CurrentPagesPerSheet">
      <summary>
            SheetごとにPagesの現在値
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.AdvancedLayoutControlsEnabled">
      <summary>
            ページスケーリングがMultiplePagesでない場合はTrue
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.MarginControlsEnabled">
      <summary>
            ページスケーリングがNoneでない場合はTrue
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.IsCurrentPageScaleIsNotNone">
      <summary>
            ページスケールがNoneでない場合はTrue
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PageOrders">
      <summary>
            使用可能なすべてのページ順序名
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.CurrentPageOrder">
      <summary>
            ページの順序の現在値。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.PrintPageBorders">
      <summary>
            ページボーダーを印刷するかどうか。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.AutoRotatePages">
      <summary>
            ページを自動回転するかどうか
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.WatermarkText">
      <summary>
            ウォーターマークのテキスト
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.WatermarkFontFamily">
      <summary>
            ウォーターマークのフォント
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.WatermarkFontSizeInPoints">
      <summary>
            フォントサイズ（point単位）
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.WatermarkColorARGB">
      <summary>
            色（ARGB形式）
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.WatermarkRotationAngle">
      <summary>
            回転角度（度単位）
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.GoPreviousPage">
      <summary>
            前のページに移動します
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.GoNextPage">
      <summary>
            次のページに移動します
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.GoFirstPage">
      <summary>
            最初のページに移動します
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.GoLastPage">
      <summary>
            最後のページに移動します
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.CurrentPageIndex">
      <summary>
            現在のページインデックスを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.CurrentPageAndCount">
      <summary>
            現在のページ、ページ数、および読み込みの進行状況をわかりやすい形で表示します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.LastError">
      <summary>
            最終エラー。エラーがない場合はString.Empty
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.OriginalDocument">
      <summary>
            元のドキュメント（未変更）
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.PageSetupViewModel.ReportModel">
      <summary>
            レポートモデルを取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel">
      <summary>
            ParametersPaneView用のビューモデル
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="model">ビューモデルを表します。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel.Refresh">
      <summary>
            このインスタンスを更新します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel.IsValid">
      <summary>
            レポートパラメータが有効かどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel.RefreshReport">
      <summary>
            'View report'ボタンにバインドされました。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel.Params">
      <summary>
            パラメータの一覧を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel.ContextMenu">
      <summary>
            コンテキストメニューを取得または設定します。
            </summary>
      <value>コンテキストメニューを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParametersViewModel.Text">
      <summary>
            テキストを取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel">
      <summary>
            IReportParameterのビューモデル
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.#ctor(GrapeCity.Viewer.Common.Model.IReportParameter)">
      <summary>
            IReportParameterのビューモデルを作成します。
            </summary>
      <param name="param">
      </param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.Options">
      <summary>
            複数値パラメータのオプションリスト。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.IsValueNull">
      <summary>
            値がnullの場合はtrue
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.Prompt">
      <summary>
            ラベルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.Nullable">
      <summary>
            パラメータがnullの場合はtrue
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.MultiLine">
      <summary>
            パラメータが複数行の場合はTrue
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.DateOnly">
      <summary>
            パラメータで日付のみを入力できる場合はTrue。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.SupportRelativeDate">
      <summary>
            パラメータが相対日付をサポートする場合はtrue。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.IsRelativeDate">
      <summary>
            相対日付の値を入力する場合はTrue
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.StartDatePart">
      <summary>
             相対日付の開始部分の値。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.ShiftDatePart">
      <summary>
             相対日付のシフト部分の値。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.RangeDatePart">
      <summary>
             相対日付の範囲部分の値。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.ValueEnabled">
      <summary>
            ユーザーが実際の値を変更できる場合はtrue。そうでない場合はFalse
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.Enabled">
      <summary>
            ユーザーがパラメータを変更できる場合はtrue（パラメータには未完成の依存関係はありません。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.ErrorText">
      <summary>
            最終のエラーのテキスト。すべてがOKの場合は空。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.ParameterType">
      <summary>
            パラメーターの型を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.ParameterName">
      <summary>
            パラメーター名を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.RepresentedWith">
      <summary>
            値（１以上）を保持するコントロールの型を返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.StringValue">
      <summary>
            パラメータ値の文字列表現。パラメータがStringで、AllowEmptyがtrueの場合は、String.Emptyはnullに変換されます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.Value">
      <summary>
            パラメータ値の型を取得します。たとえば、DateTimeまたはBool。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterViewModel.SelectAll">
      <summary>
            複数値パラメータの場合の特別なパラメータ値（すべての値を選択）
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ParameterOptionViewModel">
      <summary>
            複数値パラメータ用の単一オプションビューモデル
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ParameterOptionViewModel.ToString">
      <summary>
            ラベル値を返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterOptionViewModel.Index">
      <summary>
            オプション一意インデックス。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterOptionViewModel.Label">
      <summary>
            ユーザーに表示するテキスト
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterOptionViewModel.Value">
      <summary>
            オプションの実際の値
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ParameterOptionViewModel.Selected">
      <summary>
            オプションが選択されている場合はTrue。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.VisualRepresentation">
      <summary>
            パラメータの可能な可視化の列挙型。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.VisualRepresentation.SelectOneFromMany">
      <summary>
            使用可能な値リストから1つの値を選択します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.VisualRepresentation.MultiValue">
      <summary>
            使用可能な値のリストからいくつかの値を選択します
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.VisualRepresentation.MultiLine">
      <summary>
            複数行パラメータ
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.VisualRepresentation.SingleValue">
      <summary>
            単一値パラメータ
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ReportPaneViewModel">
      <summary>
            レポートペイン用のビューモデル。レポートペインのモデルを表示します。単一ページと複数ページのビューを処理します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ReportPaneViewModel.#ctor(GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.Model.ReportPaneModel,GrapeCity.Viewer.Common.Model.ViewerModel)">
      <summary>
            Ctor
            </summary>
      <param name="context">アプリケーションのコンテキスト</param>
      <param name="model">このレポートペインのモデル。</param>
      <param name="viewerModel">ビューワのモデル。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ReportPaneViewModel.IsActive">
      <summary>
            現在のレポートペインがアクティブかどうかを示す値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ReportPaneViewModel.GrayedAreaColor">
      <summary>
            非アクティブなビューの色。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ReportPaneViewModel.MultiPageViewModel">
      <summary>
            現在の複数ページビュー用のビューモデル
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ReportPaneViewModel.SinglePageViewModel">
      <summary>
            現在の単一ページビュー用のビューモデル
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel">
      <summary>
            検索ダイアログ用のビューモデル。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel,GrapeCity.Viewer.Common.IApplicationContext)">
      <summary>
             SearchPanelViewModelクラスの新しいインスタンスを初期化します。
            </summary>
      <param name="model">
      </param>
      <param name="applicationContext">
      </param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.FindAll">
      <summary>
            テキスト検索を実行します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.Clear">
      <summary>
            「検索結果のクリア」コマンドを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.SearchString">
      <summary>
            ドキュメント内で検索する文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.MatchWholeWord">
      <summary>
            検索文字列が単語単位に一致する必要があるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.MatchCase">
      <summary>
            見つかったテキストが検索文字列の大文字と一致する必要があるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.SearchResults">
      <summary>
            見つかった結果テーブルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.CurrentSearchResultIndex">
      <summary>
            SearchResultsリスト内で現在選択されている項目を取得または設定します。
「-1」はエントリが選択されなかったことを意味します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.Status">
      <summary>
            ユーザーに表示する文字列を取得または設定します。通常は、ドキュメントの終了または開始に達するときのイベントを表します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.ContextMenu">
      <summary>
            コンテキストメニューを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchPanelViewModel.Text">
      <summary>
            テキストを取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.SearchResultViewModel">
      <summary>
            検索パネル内の結果リストのエントリを表します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchResultViewModel.Result">
      <summary>
            ドキュメント内で見つかった文字列の位置を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SearchResultViewModel.Text">
      <summary>
            文字列が見つかったコントロールからテキストを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel">
      <summary>
            サイドバーパネル用のビューモデル
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.#ctor(GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.Model.ViewerModel)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="applicationContext">アプリケーションコンテキストです。</param>
      <param name="model">ビューモデルを表します。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.Toc">
      <summary>
            TOCペインのためにVMを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.ThumbnailsPane">
      <summary>
            サムネイルペインのためにVMを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.SearchPane">
      <summary>
            検索ペインのためにVMを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.ParamsViewModel">
      <summary>
            パラメータペインのためにVMを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.TocPanelVisible">
      <summary>
            目次パネルとそのボタンが表示されているかどうか。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.TocPanelEnabled">
      <summary>
            目次パネルが有効かどうかを示す値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.ThumbnailPanelVisible">
      <summary>
            サムネイルパネルとそのボタンが表示されているかどうか。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.ThumbnailPanelEnabled">
      <summary>
            サムネイルパネルとそのボタンが表示されているかどうか。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.SearchPanelVisible">
      <summary>
            検索パネルとそのボタンが表示されているかどうか。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.SearchPanelEnabled">
      <summary>
            検索パネルが有効かどうか
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.ParamsPanelVisible">
      <summary>
            パラメータパネルとそのボタンが表示されているかどうか。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.ParamsPanelEnabled">
      <summary>
            パラメータパネルが有効かどうか
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.ActiveTab">
      <summary>
            現在アクティブな（表示中）タブを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SidebarViewModel.ActiveTabIndex">
      <summary>
            アクティブなタブのインデックスを取得または設定します。
            </summary>
      <value>アクティブなタブのインデックス。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel">
      <summary>
            ドキュメントの単ーのページを表示できるビューのアクティブなモデル。これは、ViewerModelおよびReportPaneModelの両方が集約します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel,GrapeCity.Viewer.Common.Model.ReportPaneModel,GrapeCity.Viewer.Common.IApplicationContext)">
      <summary>
            SinglePageViewModelクラスの新しいインスタンスを初期化します。
            </summary>
      <param name="viewerModel">
      </param>
      <param name="reportPaneModel">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.InvalidateCache">
      <summary>
            キャッシュをクリアします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.Dispose">
      <summary>
            ビューワモデルから登録解除します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.SetScrollPositionGetter(System.Func{GrapeCity.Viewer.Common.Point})">
      <summary>
            スクロール位置のgetアクセス操作子を設定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.SetScrollPositionSetter(System.Action{GrapeCity.Viewer.Common.Point})">
      <summary>
            スクロール位置のsetアクセス操作子を設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.VerticallyCentered">
      <summary>
            ページを縦方向の中央に配置する必要があるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.PageView">
      <summary>
            ページの実際の表示を担当するものを提供します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.ScrollArea">
      <summary>
            スクロール領域を取得します。
            </summary>
      <value>スクロール領域を表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.SinglePageViewModel.PageOffset">
      <summary>
            ar6公開APIのレガシー 
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ThumbnailItemViewModel">
      <summary>
            単一のサムネイル項目のプレゼンテーション モデル。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailItemViewModel.View">
      <summary>
            サムネイルのイメージを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailItemViewModel.PaperColor">
      <summary>
            用紙の色を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailItemViewModel.Caption">
      <summary>
            サムネイルのキャプションを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailItemViewModel.IsSelected">
      <summary>
            現在のサムネイルが現在選択されているかどうかを取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel">
      <summary>
            サムネイルペインのプレゼンテーションモデル（ViewModel）を実装します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.MinZoomFactor">
      <summary>
            最小のズーム倍率。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.MaxZoomFactor">
      <summary>
            最大のズーム倍率。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.ZoomCommandIncrement">
      <summary>
            ズームの増分値。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.PickModels(System.Action{GrapeCity.Viewer.Common.Model.ViewerModel})">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.Pages">
      <summary>
            ページのコレクションを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.ZoomValue">
      <summary>
            Thumbnailsのズーム倍率を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.CurrentPageIndex">
      <summary>
            現在選択されているサムネイルの項目を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.MaxPageSize">
      <summary>
            ページの最大幅と最大高さを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.PaperColor">
      <summary>
            用紙の色を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.ZoomIn">
      <summary>
            ズーム倍率を増やします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.ZoomOut">
      <summary>
            ズーム倍率を下げます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.ContextMenu">
      <summary>
            コンテキストメニューを取得または設定します。
            </summary>
      <value>コンテキストメニューを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ThumbnailsViewModel.Text">
      <summary>
            テキストを取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IRasteredRenderer">
      <summary>
            ラスタ化されたドキュメントレンダラーのインターフェース。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IRasteredRenderer.RenderPage(System.Int32,System.Double)">
      <summary>
            ページを描画します。
            </summary>
      <param name="index">描画するページインデックス。</param>
      <param name="screenDpiFactor">画面のdpi</param>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.TocViewModel">
      <summary>
            TocViewのアクティブビューモデル
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.TocViewModel.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.TocViewModel">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="model">ビューモデルを表します。</param>
      <exception cref="T:System.ArgumentNullException">モデル</exception>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.TocViewModel.Bookmarks">
      <summary>
            ブックマークツリーを表します。ドキュメントにブックマークがない場合はnullになることがあります。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.TocViewModel.SelectedBookmark">
      <summary>
            現在選択されているブックマークをブックマーク付きの位置に移動するように設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.TocViewModel.SelectedNode">
      <summary>
             現在選択されているノードをTOCツリー（SLV2.0）に設定します。 
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.TocViewModel.Expanded">
      <summary>
             TOCツリーを展開した状態で表示するかどうかを設定または取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.TocViewModel.ClearToc">
      <summary>
            「clear toc」コマンドを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.TocViewModel.RefreshToc">
      <summary>
            「refresh toc」コマンドを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.TocViewModel.ContextMenu">
      <summary>
            コンテキストメニューを取得または設定します。
            </summary>
      <value>コンテキストメニューを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.TocViewModel.Text">
      <summary>
            テキストを取得または設定します。
            </summary>
      <value>テキストです。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel">
      <summary>
            ツールバー用のビューモデル。
            </summary>
      <summary>
            ツールバー用のビューモデル。
これは、WPFプロジェクトで異なる定義を含む部分コードです。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.#ctor(GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.Model.ViewerModel)">
      <summary>
            Ctor
            </summary>
      <param name="context">アプリケーションの内容。</param>
      <param name="model">ビューモデルの基になるモデル。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.Model">
      <summary>
            ビューモデルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ZoomOut">
      <summary>
            ズームアウトのコマンド。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ZoomIn">
      <summary>
            ズームインのコマンド。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ZoomReset">
      <summary>
            ズームをデフォルトに戻す（100%）。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.SetViewType">
      <summary>
            ビュータイプのコマンドを設定します（パラメータ付き）。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.SetGalleyMode">
      <summary>
            GalleyModeのコマンドを設定します。 
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.SetZoomMode">
      <summary>
            ズームモードのコマンドを設定します（パラメータ付き）。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.GoPreviousPage">
      <summary>
            前のページに移動します
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.GoNextPage">
      <summary>
            次のページに移動します
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.GoFirstPage">
      <summary>
            最初のページに移動します
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.GoLastPage">
      <summary>
            最後のページに移動します
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.Print">
      <summary>
            レポートを印刷します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.GoHistoryBack">
      <summary>
            現在のページを前のページに設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.GoHistoryNext">
      <summary>
            現在のページを次のページに設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.DisplayFindDialog">
      <summary>
            必要なテキストを検索します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ToggleTOC">
      <summary>
            目次パネルの可視性を切り替えます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.OpenReport">
      <summary>
            [レポートを開く]ダイアログを表示します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ToggleFindPanel">
      <summary>
            検索パネルの可視性を切り替えます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.RefreshReport">
      <summary>
            レポートを更新します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.FocusOnPageNumber">
      <summary>
            ページ番号テキストボックスにフォーカスを当て、ケース149865をチェックします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.SetMouseMode">
      <summary>
            現在のレポートペインのマウスモードを設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.CopySelection">
      <summary>
            選択をクリップボードにコピーします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.BackToParentReport">
      <summary>
            「Back to parent report」コマンドを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.CancelLoading">
      <summary>
            「Cancel Loading report」コマンドを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.SetTouchMode">
      <summary>
            TouchModeをオンまたはオフに切り替えます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.CurrentPageAndCount">
      <summary>
            現在のページ、ページ数、および読み込みの進行状況をわかりやすい形で表示します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsUIEnabled">
      <summary>
            現在のドキュメントに表示可能なページが存在する場合はTrue。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ZoomValue">
      <summary>
            書式付きズーム値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.MinZoomValue">
      <summary>
            最小のズーム値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.MaxZoomValue">
      <summary>
            最大のズーム値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ZoomDoubleValue">
      <summary>
            ズーム値を取得または設定します。
            </summary>
      <value>ズーム値を表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsFitWidth">
      <summary>
            現在のZoomModeがZoomMode.FitWidthの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsFitPage">
      <summary>
             現在のZoomModeがZoomMode.FitPageの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsSinglePage">
      <summary>
            現在のViewTypeがViewType.SinglePageの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsContinuous">
      <summary>
            現在のViewTypeがViewType.Continuousの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.GalleyMode">
      <summary>
            レポートのGalleyModeを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.AllowGalleyMode">
      <summary>
            GalleyModeがレポートに許可されている場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.AllowBackToParent">
      <summary>
            BackToParentがレポートに許可されている場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.AllowCancel">
      <summary>
            Cancelがレポートに許可されている場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.MouseMode">
      <summary>
            マウスモードを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ColumnsCount">
      <summary>
            列数を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.RowsCount">
      <summary>
            行数を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.SidebarVisible">
      <summary>
            サイドバーが表示されているかどうかを示す値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.SidebarSearchPaneActive">
      <summary>
            サイドバーが開いている状態で、検索ペインがアクティブな場合はTrue。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ShowSidebarEnabled">
      <summary>
            'show sidebar'ボタンが有効かどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.TocEnabled">
      <summary>
            目次が有効かどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.PageNumberHasFocus">
      <summary>
            「page number」コントロールにフォーカスがあるかどうかを示す値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.CurrentAnnotationKind">
      <summary>
            現在の注釈の種類を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.AnnotationButtonsAvailable">
      <summary>
            注釈ボタンを使用できるかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.AnnotationButtonVisible">
      <summary>
            注釈が現在表示されているかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.MouseModeButtonsVisible">
      <summary>
            「マウスモード」ボタンが表示されるかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.TouchModeButtonVisibility">
      <summary>
            タッチモードボタンの可視性を取得します。
            </summary>
      <value>タッチモードボタンの可視性。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.TouchMode">
      <summary>
            タッチモードを取得します。
            </summary>
      <value>タッチモード。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsPanMode">
      <summary>
            現在のMouseModeがMouseMode.Panの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsCopySelectMode">
      <summary>
            現在のMouseModeがMouseMode.CopySelectの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsSnapshotMode">
      <summary>
            現在のMouseModeがMouseMode.Snapshotの場合はtrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.AvailableAnnotationKinds">
      <summary>
            ドロップダウンセレクターの使用可能な注釈の種類。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.ZoomMode">
      <summary>
            ズームモードを取得または設定します。
            </summary>
      <value>ズームモードを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ToolbarViewModel.IsMultiPage">
      <summary>
            現在のViewTypeがViewType.MultiPageの場合はtrueを返します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel">
      <summary>
            ビューワ全体のモデル。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.#ctor(GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.Model.ViewerModel)">
      <summary>
            ビューワモデルを作成します。
            </summary>
      <param name="applicationContext">アプリケーションのコンテキスト</param>
      <param name="model">ビューワのモデル。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.Dispose">
      <summary>
            モデルを破棄します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.Model">
      <summary>
            ビューモデルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.ErrorPane">
      <summary>
            エラーペインのビューモデルを取得します。
            </summary>
      <value>エラーペインのビューモデル。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.FindDialog">
      <summary>
            検索ダイアログのビューモデルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.Sidebar">
      <summary>
            サイドバーのビューモデルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.Toolbar">
      <summary>
            ツールバーのビューモデルを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.PrimaryReportPane">
      <summary>
            プライマリレポートペインのビューモデルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.SecondaryReportPane">
      <summary>
            セカンダリレポートペインのビューモデルを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.AnnotationDropDownVisible">
      <summary>
            注釈のドロップダウンが表示できるかどうかを示す値を取得または設定します。
            </summary>
      <value>
        注釈のドロップダウンが表示されている場合は<c>true</c>、それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.MouseModeButtonsVisible">
      <summary>
            MouseModeボタンの表示/非表示を制御します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.TouchModeButtonVisibility">
      <summary>
            TouchModeボタンの表示/非表示を制御します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.Load">
      <summary>
            ドキュメントを読み込みます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.SetReport">
      <summary>
            既に読み込まれたレポートをモデルに設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.CancelLoad">
      <summary>
            ドキュメントの読み込みをキャンセルします。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.SidebarCollapsed">
      <summary>
            サイドバーが折りたたまれた状態であるかどうかを示す値を取得または設定します。
            </summary>
      <value>
        [サイドバーが折りたたまれた状態]の場合は、<c>true</c>。それ以外の場合は <c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.IsPrimaryPaneSelected">
      <summary>
            選択されたインスタンスがプライマリペインであるかどうかを示す値を取得または設定します。
            </summary>
      <value>
        このインスタンスがプライマリペインである場合は<c>true</c>。そうではない場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.ShowWaitMessage">
      <summary>
            バインディングプロパティ。このプロパティは、最初のレポートページが準備ができていない場合は、「お待ちください」メッセージを表示します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewerViewModel.SidebarWidth">
      <summary>
            サイドバーの幅を取得または設定します。
            </summary>
      <value>サイドバーの幅を表します。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ViewModel.ViewTypeParameters">
      <summary>
            ビューのパラメータ。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ViewTypeParameters.#ctor(GrapeCity.Viewer.Common.Model.ViewType,System.Int32,System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.ViewModel.ViewTypeParameters">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
      <param name="viewType">ビューのタイプ。</param>
      <param name="rowsCount">行数を表します。</param>
      <param name="columnsCount">列数を表します。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ViewModel.ViewTypeParameters.#ctor(GrapeCity.Viewer.Common.Model.ViewType)">
      <summary>
            指定されたビュータイプで<see cref="T:GrapeCity.Viewer.Common.ViewModel.ViewTypeParameters"></see>構造体の新しいインスタンスを初期化します（1×1）。
            </summary>
      <param name="viewType">ビューのタイプ。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeParameters.ViewType">
      <summary>
            ビューのタイプを設定します。
            </summary>
      <value>ビューのタイプを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeParameters.RowsCount">
      <summary>
            行数を取得します。
            </summary>
      <value>行数を表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.ViewModel.ViewTypeParameters.ColumnsCount">
      <summary>
            列数を取得します。
            </summary>
      <value>列数を表します。</value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Color">
      <summary>
            プラットフォームに依存しない色の実装。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.#ctor(System.Int64)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Color">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.op_Inequality(GrapeCity.Viewer.Common.Color,GrapeCity.Viewer.Common.Color)">
      <summary>
            「！=」演算子を実装します。
            </summary>
      <param name="color1">color1を表します。</param>
      <param name="color2">color2を表します。</param>
      <returns>
            演算子の結果。
            </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.op_Equality(GrapeCity.Viewer.Common.Color,GrapeCity.Viewer.Common.Color)">
      <summary>
            「==」演算子を実装します。
            </summary>
      <param name="color1">color1を表します。</param>
      <param name="color2">color2を表します。</param>
      <returns>
            演算子の結果。
            </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.FromArgb(System.Int32)">
      <summary>
            カラーコンポーネントから新しい色を作成します。
            </summary>
      <param name="value">The value.</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.ToArgb">
      <summary>
            色のARGB値を取得します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.FromArgb(System.Int32,GrapeCity.Viewer.Common.Color)">
      <summary>
            カラーコンポーネントから新しい色を作成します。
            </summary>
      <param name="a">A.</param>
      <param name="c">cを表します。</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
            カラーコンポーネントから新しい色を作成します。
            </summary>
      <param name="a">A.</param>
      <param name="r">rを表します。</param>
      <param name="g">gを表します。</param>
      <param name="b">bを表します。</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            カラーコンポーネントから新しい色を作成します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            カラーコンポーネントから新しい色を作成します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.Equals(System.Object)">
      <summary>
            指定された<see cref="T:System.Object"></see>がこのインスタンスと等しいかどうかを判定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Color.op_Implicit(GrapeCity.Viewer.Common.Color)~System.UInt32">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Color">
        </see>から<see cref="T:System.UInt32"></see>への暗黙的な変換を実行します。
            </summary>
      <param name="color">色を表します。</param>
      <returns>変換の結果。</returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Color.Value">
      <summary>
            値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Color.R">
      <summary>
            Rカラーコンポーネントを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Color.G">
      <summary>
            Gカラーコンポーネントを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Color.B">
      <summary>
            Bカラーコンポーネントを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Color.A">
      <summary>
            Aカラーコンポーネントを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Color.IsEmpty">
      <summary>
            このインスタンスが空であるかどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが空の場合は<c>true</c>。それ以外の場合は<c>false</c>。
            </value>
    </member>
    <member name="T:GrapeCity.Viewer.Common.DelegateCommand">
      <summary>
            パラメーターなしのコンストデリゲート。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.DelegateCommand`1">
      <summary>
            DelegateCommandの実装。
            </summary>
      <typeparam name="TParm">
      </typeparam>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IDelegateCommand">
      <summary>
            デリゲートされたコマンドインタフェース。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ICommand">
      <summary>
            WPFで使用されているのと同じ契約を使用して、コマンド用の契約を定義します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ICommand.Execute(System.Object)">
      <summary>
            コマンドが呼び出されたときに呼び出すメソッドを定義します。
            </summary>
      <param name="parameter">コマンドで使用されるデータ。コマンドでデータの受け渡しが必要ない場合は、このオブジェクトをnullに設定できます。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ICommand.CanExecute(System.Object)">
      <summary>
            コマンドを現在の状態で実行できるかどうかを判断するメソッドを定義します。
            </summary>
      <param name="parameter">コマンドで使用されるデータ。コマンドでデータの受け渡しが必要ない場合は、このオブジェクトをnullに設定できます。</param>
      <returns>
      </returns>
    </member>
    <member name="E:GrapeCity.Viewer.Common.ICommand.CanExecuteChanged">
      <summary>
            コマンドを実行するかどうかに影響する変更が発生した場合に発生します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IDelegateCommand.RaiseCanExecuteChanged">
      <summary>
            CanExecuteChangedイベントを発生させます。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DelegateCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.DelegateCommand`1">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DelegateCommand`1.#ctor(System.Action{`0})">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.DelegateCommand`1">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DelegateCommand`1.CanExecute(System.Object)">
      <summary>
            コマンドを現在の状態で実行できるかどうかを判断するメソッドを定義します。
            </summary>
      <param name="parameter">コマンドで使用されるデータ。コマンドでデータの受け渡しが必要ない場合は、このオブジェクトをnullに設定できます。</param>
      <returns>
        このインスタンスが指定されたパラメータを実行できる場合は<c>true</c>、そうではない場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DelegateCommand`1.Execute(System.Object)">
      <summary>
            コマンドが呼び出されたときに呼び出すメソッドを定義します。
            </summary>
      <param name="parameter">コマンドで使用されるデータ。コマンドでデータの受け渡しが必要ない場合は、このオブジェクトをnullに設定できます。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DelegateCommand`1.RaiseCanExecuteChanged">
      <summary>
            外部コードからCanExecuteChangedイベントを発生させます。
            </summary>
    </member>
    <member name="E:GrapeCity.Viewer.Common.DelegateCommand`1.CanExecuteChanged">
      <summary>
            コマンドを実行するかどうかに影響する変更が発生した場合に発生します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.DelegateCommand.NullCommand">
      <summary>
            何もせず常に無効になっている「Null」コマンドインスタンスを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.DisposablesCollection">
      <summary>
            Dispose呼び出しを内部項目にリダイレクトするユーティリティクラス
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DisposablesCollection.Add(System.IDisposable[])">
      <summary>
            このコレクションの破棄に処分されるオブジェクトを登録します。
            </summary>
      <param name="disposables">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DisposablesCollection.Add(System.IDisposable)">
      <summary>
            オブジェクトが破棄されたときに呼び出されるアクションを登録します。
            </summary>
      <param name="disposable">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DisposablesCollection.Add(System.Action[])">
      <summary>
            オブジェクトが破棄されたときに呼び出されるアクションを登録します。
            </summary>
      <param name="disposables">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DisposablesCollection.From(System.IDisposable[])">
      <summary>
            破棄可能な他のリスト用に新しいコレクションを初期化します。
            </summary>
      <param name="disposables">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DisposablesCollection.From(System.Action[])">
      <summary>
            他のアクションリストのために新しいコレクションを初期化します。
            </summary>
      <param name="actions">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.DocumentFormat">
      <summary>
            可能なドキュメント書式を指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.DocumentFormat.Rpx">
      <summary>
            XML形式のARドキュメント
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.DocumentFormat.Rdf">
      <summary>
            バイナリ形式のARドキュメント
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.DocumentFormat.Rdlx">
      <summary>
            XML形式のDDRドキュメント
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.DocumentFormat.RdlSnapshot">
      <summary>
            PersistedDatatree
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.DocumentSearchService">
      <summary>
            ISearchableDocumentの検索サービスの実装。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ISearchService">
      <summary>
            検索用の基本インターフェース。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ISearchService.Find(GrapeCity.Viewer.Common.Model.DocumentModel,GrapeCity.Viewer.Common.Model.FindOptions,GrapeCity.Viewer.Common.Model.SearchResult,System.Int32,System.Action{GrapeCity.Viewer.Common.Model.DocumentModel,System.Collections.Generic.IEnumerable{GrapeCity.Viewer.Common.Model.SearchResult}})">
      <summary>
            検索オプションに従ってドキュメントを検索します。
            </summary>
      <param name="document">
      </param>
      <param name="findOptions">
      </param>
      <param name="startFrom">
      </param>
      <param name="maxCount">
      </param>
      <param name="handler">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DocumentSearchService.Find(GrapeCity.Viewer.Common.Model.DocumentModel,GrapeCity.Viewer.Common.Model.FindOptions,GrapeCity.Viewer.Common.Model.SearchResult,System.Int32,System.Action{GrapeCity.Viewer.Common.Model.DocumentModel,System.Collections.Generic.IEnumerable{GrapeCity.Viewer.Common.Model.SearchResult}})">
      <summary>
            検索オプションに従ってドキュメントを検索します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.DoubleDelegateCommand">
      <summary>
            実装を他のデリゲートコマンドにデリゲートするコマンド
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DoubleDelegateCommand.Execute(System.Object)">
      <summary>
            コマンドが呼び出されたときに呼び出すメソッドを定義します。
            </summary>
      <param name="parameter">コマンドで使用されるデータ。コマンドでデータの受け渡しが必要ない場合は、このオブジェクトをnullに設定できます。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DoubleDelegateCommand.CanExecute(System.Object)">
      <summary>
            コマンドを現在の状態で実行できるかどうかを判断するメソッドを定義します。
            </summary>
      <param name="parameter">コマンドで使用されるデータ。コマンドでデータの受け渡しが必要ない場合は、このオブジェクトをnullに設定できます。</param>
      <returns>
        このインスタンスが指定されたパラメータを実行できる場合は<c>true</c>、そうではない場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DoubleDelegateCommand.RaiseCanExecuteChanged">
      <summary>
            CanExecuteChangedイベントを発生させます。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.DoubleDelegateCommand.Command">
      <summary>
            コマンドを取得または設定します。
            </summary>
    </member>
    <member name="E:GrapeCity.Viewer.Common.DoubleDelegateCommand.CanExecuteChanged">
      <summary>
            コマンドを実行するかどうかに影響する変更が発生した場合に発生します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary>
            シーケンス項目ごとにアクションを実行します。
            </summary>
      <typeparam name="T">
      </typeparam>
      <param name="source">
      </param>
      <param name="action">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.EnumerableExtensions.ZipEx``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary>
            2つのシーケンスの組み合わせの結果を取得します。
結果シーケンスは最短ソースシーケンスと同じくらい短いです。
            </summary>
      <typeparam name="TSource1">
      </typeparam>
      <typeparam name="TSource2">
      </typeparam>
      <typeparam name="TResult">
      </typeparam>
      <param name="source1">
      </param>
      <param name="source2">
      </param>
      <param name="selector">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.EnumerableExtensions.GetRecursive``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
      <summary>
            すべての子孫を再帰的に抽出します。
            </summary>
      <typeparam name="T">
      </typeparam>
      <param name="source">
      </param>
      <param name="selector">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.DeviceKind">
      <summary>
            ビューに使用可能なターゲットデバイスの列挙型を定義します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.DeviceKind.Screen">
      <summary>
            画面ターゲットデバイスに出力します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.DeviceKind.Paper">
      <summary>
            用紙ターゲットデバイスに出力します。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.DeviceKind.Export">
      <summary>
            エクスポートターゲットデバイスに出力します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.DocumentRendererAttribute">
      <summary>
            クラスに指定されたドキュメントレンダラータイプを許可します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.DocumentRendererAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.DocumentRendererAttribute">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="rendererType">レンダラーのタイプ。</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.DocumentRendererAttribute.RendererType">
      <summary>
            レンダラーのタイプを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.NullRenderer">
      <summary>
            IDocumentRendererインターフェイスのNullオブジェクトの実装。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.NullRenderer.Instance">
      <summary>
            NullRendererインスタンス。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.NullRenderer.RenderPage(System.Int32)">
      <summary>
            現在のドキュメントからページを描画します。
            </summary>
      <param name="index">描画するページのインデックス。</param>
      <returns>描画されたページのビュー。</returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.NullRenderer.Factory">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.IDocumentRenderer">
        </see> factory.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.NullRenderer.Factory.Create(GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.Model.DocumentModel)">
      <summary>
            MullRenderer.Instanceオブジェクトを返します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.NullRenderer.Factory.Create(GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.Model.DocumentModel,GrapeCity.Viewer.Common.DeviceKind)">
      <summary>
            MullRenderer.Instanceオブジェクトを返します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.LoadState">
      <summary>
            ロード可能状態。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Margin">
      <summary>
            ページの余白を格納します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Margin.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Ctor
            </summary>
      <param name="left">左余白</param>
      <param name="right">右余白</param>
      <param name="top">上余白</param>
      <param name="bottom">下余白</param>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Point">
      <summary>
            プラットフォームに依存しない点
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Point.Empty">
      <summary>
            X値とY値がゼロに設定されているPointを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Point.#ctor(System.Double,System.Double)">
      <summary>
            指定された座標で<see cref="T:GrapeCity.Viewer.Common.Point"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="x">点の水平位置。</param>
      <param name="y">点の垂直位置。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Point.Offset(System.Double,System.Double)">
      <summary>
            指定された量でこの長方形の位置を調整します。
            </summary>
      <param name="x">水平方向のオフセット</param>
      <param name="y">垂直方向のオフセット</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Point.Offset(GrapeCity.Viewer.Common.Size)">
      <summary>
            指定された量でこの長方形の位置を調整します。
            </summary>
      <param name="offset">位置をオフセットする量。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Point.Equals(System.Object)">
      <summary>
            指定された<see cref="T:System.Object"></see>がこのインスタンスと等しいかどうかを判定します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Point.GetHashCode">
      <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Point.op_Addition(GrapeCity.Viewer.Common.Point,GrapeCity.Viewer.Common.Size)">
      <summary>
            特定の<see cref="T:GrapeCity.Viewer.Common.Size"></see>で<see cref="T:GrapeCity.Viewer.Common.Point"></see>を変換します。
            </summary>
      <param name="p1">翻訳する<see cref="T:GrapeCity.Viewer.Common.Point"></see>。</param>
      <param name="sz">ptの座標に追加する数値のペアを指定する<see cref="T:GrapeCity.Viewer.Common.Size"></see>。</param>
      <returns>翻訳された<see cref="T:GrapeCity.Viewer.Common.Point"></see>。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Point.op_UnaryNegation(GrapeCity.Viewer.Common.Point)">
      <summary>
            点の座標に<c>-1</c>を掛けます。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Point.ToString">
      <summary>
            このインスタンスを表す<see cref="T:System.String"></see>を返します。
            </summary>
      <returns>このインスタンスを表す<see cref="T:System.String"></see>。</returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Point.Y">
      <summary>
            このPointのy座標を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Point.X">
      <summary>
            このPointのx座標を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.PrintingSettings">
      <summary>
            印刷処理の設定。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.PrintingSettings.None">
      <summary>
            設定されている場合、印刷ダイアログが表示されません。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.PrintingSettings.ShowPrintDialog">
      <summary>
            設定されている場合、印刷ダイアログは表示されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.PrintingSettings.ShowPrintProgressDialog">
      <summary>
            設定されている場合、印刷状態情報のダイアログが表示されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.PrintingSettings.UsePrintingThread">
      <summary>
            設定されている場合、印刷は新しいスレッドで実行されます。
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.PrintingSettings.UseStandardDialog">
      <summary>
            設定されている場合、標準のPrintDialogを使用されます。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Rect">
      <summary>
            プラットフォームを意識した長方形構造
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            指定された位置およびサイズで<see cref="T:GrapeCity.Viewer.Common.Rect"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="x">長方形の左上隅のx座標。</param>
      <param name="y">四角形の左上隅の y 座標。</param>
      <param name="width">長方形の幅。</param>
      <param name="height">長方形の高さ。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.#ctor(GrapeCity.Viewer.Common.Point,GrapeCity.Viewer.Common.Size)">
      <summary>
            指定された位置およびサイズで<see cref="T:GrapeCity.Viewer.Common.Rect"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="location">長方形の左上隅を表す<see cref="T:GrapeCity.Viewer.Common.Point"></see>。</param>
      <param name="size">長方形の幅と高さを表す<see cref="P:GrapeCity.Viewer.Common.Rect.Size"></see>。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            指定された端の位置を含む<see cref="T:GrapeCity.Viewer.Common.Rect"></see>を作成します。
            </summary>
      <param name="left">四角形の左上隅の x 座標。</param>
      <param name="top">四角形の左上隅の y 座標。</param>
      <param name="right">長方形の右下隅のx座標。</param>
      <param name="bottom">長方形の右下隅のy座標。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Equals(System.Object)">
      <summary>
            指定された<see cref="T:System.Object"></see>がこのインスタンスと等しいかどうかを判定します。
            </summary>
      <param name="obj">比較する別のオブジェクト。</param>
      <returns>
        指定された<see cref="T:System.Object"></see>がこのインスタンスと等しい場合は<c>true</c>。それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Contains(System.Double,System.Double)">
      <summary>
            指定された点がこの長方形内に含まれるかどうかを判定します。
            </summary>
      <param name="x">テストする点のx座標。</param>
      <param name="y">テストする点のy座標。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Contains(GrapeCity.Viewer.Common.Point)">
      <summary>
            指定された点がこの長方形内に含まれるかどうかを判定します。
            </summary>
      <param name="pt">テストする<see cref="T:GrapeCity.Viewer.Common.Point"></see>。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Contains(GrapeCity.Viewer.Common.Rect)">
      <summary>
            rectで表される長方形領域がこの長方形内に完全に含まれるかどうかを判定します。
            </summary>
      <param name="rect">テストする<see cref="T:GrapeCity.Viewer.Common.Rect"></see>。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.GetHashCode">
      <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Inflate(System.Double,System.Double)">
      <summary>
            この<see cref="T:GrapeCity.Viewer.Common.Rect"></see>を指定の量で拡大します。
            </summary>
      <param name="x">この<see cref="T:GrapeCity.Viewer.Common.Rect"></see>を水平方向に拡大する量。</param>
      <param name="y">この<see cref="T:GrapeCity.Viewer.Common.Rect"></see>を垂直方向に拡大する量。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Inflate(GrapeCity.Viewer.Common.Size)">
      <summary>
            この<see cref="T:GrapeCity.Viewer.Common.Rect"></see>を指定の量で拡大します。
            </summary>
      <param name="size">この長方形を拡大する量。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Inflate(GrapeCity.Viewer.Common.Rect,System.Single,System.Single)">
      <summary>
            指定された<see cref="T:GrapeCity.Viewer.Common.Rect"></see>構造の拡大コピーを作成して返します。コピーは指定の量で拡大されます。元の<see cref="T:GrapeCity.Viewer.Common.Rect"></see>構造は変更されません。
            </summary>
      <param name="rect">開始する<see cref="T:GrapeCity.Viewer.Common.Rect"></see>。この長方形は変更されません。</param>
      <param name="x">長方形を水平方向に拡大する量。</param>
      <param name="y">長方形を垂直方向に拡大する量。</param>
      <returns>Rect。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Intersect(GrapeCity.Viewer.Common.Rect)">
      <summary>
            この<see cref="T:GrapeCity.Viewer.Common.Rect"></see>を、それ自身と指定された<see cref="T:GrapeCity.Viewer.Common.Rect"></see>の交差点に置き換えます。
            </summary>
      <param name="rect">交差する<see cref="T:GrapeCity.Viewer.Common.Rect"></see>。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Intersect(GrapeCity.Viewer.Common.Rect,GrapeCity.Viewer.Common.Rect)">
      <summary>
            2つの<see cref="T:GrapeCity.Viewer.Common.Rect"></see>構造体の共通部分を表す3番目の<see cref="T:GrapeCity.Viewer.Common.Rect"></see>構造体を返します。交差点がない場合は、空の<see cref="T:GrapeCity.Viewer.Common.Rect"></see>が返されます。
            </summary>
      <param name="a">交差する長方形。</param>
      <param name="b">交差する長方形。</param>
      <returns>Rect。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.IntersectsWith(GrapeCity.Viewer.Common.Rect)">
      <summary>
            この長方形が指定の長方形と交差するかどうかを判定します。
            </summary>
      <param name="rect">テストする長方形。</param>
      <returns>このメソッドは、交差点がある場合は<c>true</c>を返します。そうでない場合は<c>false</c>を返します。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Union(GrapeCity.Viewer.Common.Rect,GrapeCity.Viewer.Common.Rect)">
      <summary>
            2つの<see cref="T:GrapeCity.Viewer.Common.Rect"></see>構造体の結合を含む<see cref="T:GrapeCity.Viewer.Common.Rect"></see>構造体を作成します。
            </summary>
      <param name="a">結合する長方形。</param>
      <param name="b">結合する長方形。</param>
      <returns>2つの長方形の結合を境界とする長方形。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Scale(System.Double)">
      <summary>
            指定された倍率で長方形をスケールします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Scale(System.Double,System.Double)">
      <summary>
            指定された倍率（１以上）で長方形をスケールします。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Offset(GrapeCity.Viewer.Common.Point)">
      <summary>
            指定された量でこの長方形の位置を調整します。
            </summary>
      <param name="pos">位置をオフセットする量。</param>
      <returns>Rect。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.Offset(System.Double,System.Double)">
      <summary>
            指定された量でこの長方形の位置を調整します。
            </summary>
      <param name="x">水平方向のオフセット</param>
      <param name="y">垂直方向のオフセット</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Rect.ToString">
      <summary>
            このインスタンスを表す<see cref="T:System.String"></see>を返します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Location">
      <summary>
            この長方形の左上隅の座標を取得します。
            </summary>
      <value>位置を表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Size">
      <summary>
            この矩形のサイズを取得します。
             </summary>
      <value>サイズを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.X">
      <summary>
            この長方形の左上隅のx座標を取得します。
            </summary>
      <value>xを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Y">
      <summary>
            この長方形の左上隅のy座標を取得します。
            </summary>
      <value>yを表します。</value>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Width">
      <summary>
            この長方形の幅を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Height">
      <summary>
            この長方形の高さを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Left">
      <summary>
            この長方形の左端のx座標を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Top">
      <summary>
            この長方形の上端のy座標を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Right">
      <summary>
            この長方形の右端のx座標を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.Bottom">
      <summary>
            この長方形の下端のy座標を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Rect.IsEmpty">
      <summary>
            この長方形のサイズが0より小さいか等しいかどうかを判定します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.RectExtensions">
      <summary>
            ヘルパーメソッドによって<see cref="T:GrapeCity.Viewer.Common.Rect"></see>構造体を拡張します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.RectExtensions.Round(GrapeCity.Viewer.Common.Rect,System.Int32)">
      <summary>
            長方形の座標とサイズを丸めます。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Size">
      <summary>
            プラットフォームを意識したSize構造体
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.#ctor(System.Double,System.Double)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.Size">
        </see>構造体の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.op_Multiply(GrapeCity.Viewer.Common.Size,System.Double)">
      <summary>
            指定された値でサイズを拡大/縮小します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.Scale(System.Double,System.Double)">
      <summary>
            指定された値（１以上）でサイズを拡大/縮小します。
            </summary>
      <param name="factorX">スケール倍率の幅。</param>
      <param name="factorY">スケール 倍率の高さ。</param>
      <returns>サイズです。</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.op_Addition(GrapeCity.Viewer.Common.Size,GrapeCity.Viewer.Common.Size)">
      <summary>
            指定された値でサイズを拡大します。
            </summary>
      <param name="size">拡大するサイズ。</param>
      <param name="offset">オフセットです。</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.ToString">
      <summary>
            このインスタンスを表す<see cref="T:System.String"></see>を返します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.op_Equality(GrapeCity.Viewer.Common.Size,GrapeCity.Viewer.Common.Size)">
      <summary>
            2つのサイズが等しいかどうかを確認します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.op_Inequality(GrapeCity.Viewer.Common.Size,GrapeCity.Viewer.Common.Size)">
      <summary>
            2つのサイズが等しくないかどうかを確認します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.Equals(GrapeCity.Viewer.Common.Size)">
      <summary>
            このサイズが指定されたサイズと等しいかどうかを確認します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Size.GetHashCode">
      <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
      <returns>このインスタンスのハッシュコード。ハッシュアルゴリズムやハッシュテーブルなどのデータ構造での使用に適しています。</returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Size.Empty">
      <summary>
            ゼロ幅とゼロ高さでサイズを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Size.Width">
      <summary>
            幅を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Size.Height">
      <summary>
            高さを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.WinformsSpecific.FileDocumentLoader">
      <summary>
            FileDocumentLoader
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.NotifyCollectionChangedAction">
      <summary>
            NotifyCollectionChangedAction列挙型
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs">
      <summary>
            System.Collections.Specialized.INotifyCollectionChanged.CollectionChangedイベントを発生させたアクションについて説明します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs.#ctor(GrapeCity.Viewer.Common.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs.#ctor(GrapeCity.Viewer.Common.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs.#ctor(GrapeCity.Viewer.Common.NotifyCollectionChangedAction)">
      <summary>
        <see cref="T:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs">
        </see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs.Action">
      <summary>
            アクションタイプを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs.NewStartingIndex">
      <summary>
            新しい項目の開始のインデックスを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs.OldStartingIndex">
      <summary>
            古い項目の開始のインデックスを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs.NewItems">
      <summary>
            新しい項目を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.NotifyCollectionChangedEventArgs.OldItems">
      <summary>
            古い項目を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.NotifyCollectionChangedEventHandler">
      <summary>
            System.Collections.Specialized.INotifyCollectionChanged.CollectionChangedイベントを実装するイベントを処理するメソッドを表します。
            </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ActiveModel.PropertyChangedHandler">
      <summary>
             Represents the method that will handle the System.ComponentModel.INotifyPropertyChanged.PropertyChanged event raised when a property is changed on a component.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModel.AddPropertyChanged(System.ComponentModel.PropertyChangedEventHandler)">
      <summary>
            Adds the handler for the component property changed event.
            </summary>
      <param name="value">The method handler to be added.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ActiveModel.RemovePropertyChanged(System.ComponentModel.PropertyChangedEventHandler)">
      <summary>
            Removes the handler for the component property changed event.
            </summary>
      <param name="value">The method handler to be removed.</param>
    </member>
    <member name="E:GrapeCity.Viewer.Common.Model.ActiveModel.PropertyChanged">
      <summary>
             The event raises when a property is changed on a component.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.Find(GrapeCity.Viewer.Common.Model.FindOptions,GrapeCity.Viewer.Common.Model.SearchResult)">
      <summary>
            Finds items corresponding with search settings.
            </summary>
      <param name="options">Text-based search settings.</param>
      <param name="startFrom">Text search result the searching starts from.</param>
      <returns>Found instances of <see cref="T:GrapeCity.Viewer.Common.Model.SearchResult"></see>.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.SelectItems(System.Int32,GrapeCity.Viewer.Common.Rect)">
      <summary>
            Select items of the page inside the determined rectangle.
            </summary>
      <param name="pageIndex">The index of page.</param>
      <param name="frame">The rectangle inside wich items are selected.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.ClearSelection">
      <summary>
            Clears the current selection.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.CreateAnnotationsRenderer">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.CurrentSelection">
      <summary>
            Gets or sets selected document items.
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.DocumentModel.IPage.PaperInfo">
      <summary>
            Gets paper information.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.Equals(System.Object)">
      <summary>
            Determines whether the specified object is equal to the current <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> instance.
            </summary>
      <param name="obj">The object to compare with the current <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> instance.</param>
      <returns>true if the specified object is equal to the current <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> instance; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.op_Equality(GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo,GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo)">
      <summary>
            Determines whether two specified <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> structs are equal.
            </summary>
      <param name="s1">Instance of the <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> struct.</param>
      <param name="s2">Instance of the <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> struct.</param>
      <returns>true if the values of its operands are equal, false otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.op_Inequality(GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo,GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo)">
      <summary>
            Determines whether two specified <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> structs are not equal.
            </summary>
      <param name="s1">Instance of the <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> struct.</param>
      <param name="s2">Instance of the <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> struct.</param>
      <returns>true if the values of its operands are not equal, false otherwise.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.Equals(GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo)">
      <summary>
            Determines whether the specified <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> struct is equal to the current <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> instance.
            </summary>
      <param name="other">The <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> struct to compare with the current <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> instance.</param>
      <returns>true if the specified <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> struct is equal to the current instance; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo.GetHashCode">
      <summary>
            Serves as the default hash function.
            </summary>
      <returns>A hash code for the current <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.PaperInfo"></see> instance.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.DocumentModel.TextItem.#ctor(System.Int32,GrapeCity.Viewer.Common.Rect)">
      <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.TextItem"></see> class.
            </summary>
      <param name="itemIndex">The index of the item.</param>
      <param name="bounds">The bounds of the item.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.BaseDocumentModelImpl.Find(GrapeCity.Viewer.Common.Model.FindOptions,GrapeCity.Viewer.Common.Model.SearchResult)">
      <summary>
            Finds items corresponding with search settings.
            </summary>
      <param name="options">Text-based search settings.</param>
      <param name="startFrom">Text search result the searching starts from.</param>
      <returns>Found instances of <see cref="T:GrapeCity.Viewer.Common.Model.SearchResult"></see>.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.BaseDocumentModelImpl.GetItemText(GrapeCity.Viewer.Common.Model.SearchResult)">
      <summary>
            Gets the text value of the specified search result.
            </summary>
      <param name="result">The search result to get text from.</param>
      <returns>the text value of the specified search result.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.BaseDocumentModelImpl.SelectItems(System.Int32,GrapeCity.Viewer.Common.Rect)">
      <summary>
            Select items of the page inside the determined rectangle.
            </summary>
      <param name="pageIndex">The index of page.</param>
      <param name="frame">The rectangle inside wich items are selected.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.BaseDocumentModelImpl.GetPage(System.Int32)">
      <summary>
            Return page by index.
            </summary>
      <param name="pageIndex">The index of the page.</param>
      <returns>The instance of the <see cref="T:GrapeCity.Viewer.Common.Model.DocumentModel.IPage"></see></returns>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ExportOptions.Type">
      <summary>
            The export type.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ExportOptions.Settings">
      <summary>
            The export settings.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ExportOptions.#ctor(GrapeCity.Viewer.Common.Model.ExportType)">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.ExportOptions"></see>.
            </summary>
      <param name="type">The export type.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ExportOptions.#ctor(GrapeCity.Viewer.Common.Model.ExportType,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.ExportOptions"></see>.
            </summary>
      <param name="type">The export type.</param>
      <param name="settings">The export settings.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.#ctor">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.ReportModelBase"></see>.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.HandleError(GrapeCity.Viewer.Common.Model.IErrorHandler,System.Exception)">
      <summary>
            Handle runtime error.
            </summary>
      <param name="errorHandler">
      </param>
      <param name="exception">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.Dispose">
      <summary>
            Disposes Model.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportModelBase.ExtractBookmarksAction">
      <summary>
            Action that should be executed to extract bookmarks.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.ReportModelBase.ClearBookmarksAction">
      <summary>
            Action that should be executed to clear bookmarks.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.ClearBookmarks">
      <summary>
            Clears bookmarks.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportModelBase.RefreshBookmarks">
      <summary>
            Etracts bookmarks.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.PageView.#ctor(GrapeCity.Viewer.Common.DeviceKind)">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.PageView"></see>.
            </summary>
      <param name="device">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.#ctor(GrapeCity.Viewer.Common.Implementation.IItemCollection{GrapeCity.Viewer.Common.Model.Annotations.AnnotationsPage})">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook"></see>.
            </summary>
      <param name="pages">Collection of the instances of <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationsPage"></see>.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.Dispose">
      <summary>
            Disposes allocated resources.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.Dispose(System.Boolean)">
      <summary>
            Disposes allocated resources.
            </summary>
      <param name="disposing">The flag showes should allocated resources be disposed or not.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationBook.ObserveRange(GrapeCity.Viewer.Common.Model.Observable{GrapeCity.Viewer.Common.Model.Range},System.Func{GrapeCity.Viewer.Common.Model.Annotations.AnnotationsPage,System.Int32,System.IDisposable})">
      <summary>
            Observes modifyable range of regular items collection.
            </summary>
      <param name="range">Floating range to observe elements within.</param>
      <param name="subscribeItem">The item handler.</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationsPage.AddPropertyChanged(System.ComponentModel.PropertyChangedEventHandler)">
      <summary>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationsPage.RemovePropertyChanged(System.ComponentModel.PropertyChangedEventHandler)">
      <summary>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.Annotations.AnnotationsPage.Items">
      <summary>
            Collection of <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem"></see>.
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.IItemCollection`1.Count">
      <summary>
            Count of items in collection.
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Implementation.IItemCollection`1.Item(System.Int32)">
      <summary>
            Gets the item by index
            </summary>
      <param name="index">index of the item</param>
      <returns>
      </returns>
    </member>
    <member name="F:GrapeCity.Viewer.Common.ObservableCollection`1.CollectionChangedHandler">
      <summary>
            Represents the method that handles events that implement the CollectionChanged event.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ObservableCollection`1.ClearItems">
      <summary>
            Clears items in collection.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ObservableCollection`1.SetItem(System.Int32,`0)">
      <summary>
            Replaces the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for the element at the specified index.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ObservableCollection`1.InsertItem(System.Int32,`0)">
      <summary>
            Inserts an element into the collection at the specified index.
            </summary>
      <param name="index">The zero-based index at which item should be inserted.</param>
      <param name="item">The object to insert.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ObservableCollection`1.RemoveItem(System.Int32)">
      <summary>
             Removes the element at the specified index of the collection.
            </summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ObservableCollection`1.AddCollectionChanged(GrapeCity.Viewer.Common.NotifyCollectionChangedEventHandler)">
      <summary>
            Adds the new handler of the CollectionChanged event. 
            </summary>
      <param name="handler">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ObservableCollection`1.RemoveCollectionChanged(GrapeCity.Viewer.Common.NotifyCollectionChangedEventHandler)">
      <summary>
            Removes the handler of the CollectionChanged event.
            </summary>
      <param name="handler">
      </param>
    </member>
    <member name="E:GrapeCity.Viewer.Common.ObservableCollection`1.CollectionChanged">
      <summary>
            Occurs when the items list of the collection has changed, or the collection is reset.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.#ctor(GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Caps,System.Object)">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem"></see>.
            </summary>
      <param name="caps">
      </param>
      <param name="nativeItem">
      </param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Equals(GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem)">
      <summary>
            Determines whether the specified <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem"></see> is considered equal to the current instance.
            </summary>
      <param name="other">The <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem"></see> to compare.</param>
      <returns>true if the instances are equal; otherwise false.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Equals(System.Object)">
      <summary>
            Determines whether the specified object is considered equal to the current instance of the <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem"></see> .
            </summary>
      <param name="obj">The object to compare.</param>
      <returns>true if the instances are equal; otherwise false.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.GetHashCode">
      <summary>
             Serves as a hash function for <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem"></see>.
            </summary>
      <returns>A hash code for the current instance of <see cref="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem"></see>.</returns>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Caps">
      <summary>
            Properties of the AnnotationItem instances.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Caps.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Caps.Move">
      <summary>
            Move.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Caps.Resize">
      <summary>
            Resize.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Caps.MoveResize">
      <summary>
            Move and Resize.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Caps.Rotate">
      <summary>
            Rotate.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Annotations.AnnotationItem.Caps.PropertiesAndDelete">
      <summary>
            Properties and Delete.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.CachedPageView.#ctor(GrapeCity.Viewer.Common.DeviceKind)">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.CachedPageView"></see>.
            </summary>
      <param name="device">Target device for view.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.CachedPageView.Dispose">
      <summary>
            Disposes allocated resources.
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.ILoadableFromFileAndStream">
      <summary>
            Interface ILoadableFromFileAndStream
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ILoadableFromFileAndStream.LoadFromFile(System.IO.FileInfo)">
      <summary>
            Load from file.
            </summary>
      <param name="f">instance of the <see cref="T:System.IO.FileInfo"></see>.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ILoadableFromFileAndStream.LoadFromStream(System.IO.Stream)">
      <summary>
            Load from the stream.
            </summary>
      <param name="s">instance of the <see cref="T:System.IO.Stream"></see>.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.ILoadableFromFileAndStream.LoadFromStream(System.IO.Stream,System.Uri)">
      <summary>
            Load from the stream.
            </summary>
      <param name="s">instance of the <see cref="T:System.IO.Stream"></see>.</param>
      <param name="baseUri">base uri.</param>
    </member>
    <member name="P:GrapeCity.Viewer.Common.IOrientedPageView.Orientation">
      <summary>
            Gets orientation of the report page.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Viewer.Win.DisplayUnits.Inches">
      <summary>
            Inches.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Viewer.Win.DisplayUnits.Metric">
      <summary>
            Metrics.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PrinterSettings.#ctor(System.String)">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PrinterSettings"></see>.
            </summary>
      <param name="printerName">the name of the printer.</param>
    </member>
    <member name="T:GrapeCity.Viewer.Common.IPrintService">
      <summary>
            Interface IPrintService.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IPrintService.Print(GrapeCity.Viewer.Common.Model.DocumentModel,GrapeCity.Viewer.Common.Model.ReportModelBase,GrapeCity.Viewer.Common.IApplicationContext,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
             Prints the currently opened document(section or page).
            </summary>
      <param name="documentModel">Document model.</param>
      <param name="reportModel">Report instance.</param>
      <param name="context">Application context.</param>
      <param name="showPrintDialog">if true Print Dialog will be shown, otherwise not.</param>
      <param name="showPrintProgressDialog">if true Print Progress Dialog will be shown, otherwise not.</param>
      <param name="usePrintingThread">if true Printing Thread will be used, otherwise not.</param>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.IPrintService.Print(GrapeCity.Viewer.Common.Model.DocumentModel,GrapeCity.Viewer.Common.Model.ReportModelBase,GrapeCity.Viewer.Common.IApplicationContext,GrapeCity.Viewer.Common.PrintingSettings)">
      <summary>
            Prints the currently opened document(section or page).
            </summary>
      <param name="documentModel">Document model.</param>
      <param name="reportModel">Report instance.</param>
      <param name="context">Application context.</param>
      <param name="settings">Settings for print.</param>
      <returns>
      </returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.IPrintService.CanPrint">
      <summary>
            Gets the value showing can the printing be executed or not.
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Implementation.PageViewCache">
      <summary>
      </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Implementation.SequenceCollection.Remove(System.Int32)">
      <summary>
            Do not use it
            </summary>
    </member>
    <member name="T:GrapeCity.Viewer.Common.Model.Interactivity.HandlerExtensions">
      <summary>
            Utility class for handlers.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Interactivity.HandlerExtensions.Null">
      <summary>
            Instance of NullHandler.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Interactivity.ChangeType.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Interactivity.ChangeType.Relayout">
      <summary>
            Relayout.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Interactivity.ChangeType.Repaint">
      <summary>
            Repaint.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.Interactivity.ChangeType.Action">
      <summary>
            Action.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.BookmarkAction.#ctor(System.Int32,GrapeCity.Viewer.Common.Rect)">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.Interactivity.BookmarkAction"></see>.
            </summary>
      <param name="targetPage">The target page index.</param>
      <param name="targetArea">The target area.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.Interactivity.DrillthroughAction.#ctor(GrapeCity.Viewer.Common.Model.ReportModelBase)">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.Interactivity.DrillthroughAction"></see>.
            </summary>
      <param name="targetReport">The target report.</param>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.Orientation.Portrait">
      <summary>
            Portrait orientation.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.Orientation.Landscape">
      <summary>
            Landscape orientation.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PageScalingMode.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PageScalingMode.FitToPrintableArea">
      <summary>
            FitToPrintableArea.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PageScalingMode.ShrinkToPrintableArea">
      <summary>
            ShrinkToPrintableArea.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PageScalingMode.MultiplePages">
      <summary>
            MultiplePages.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PageScalingMode.Booklet">
      <summary>
            Booklet
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.#ctor">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel"></see>.
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PageSetupModel.Clone">
      <summary>
            Creates clone of the current instance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PagesOrder.Horizontal">
      <summary>
            Horizontal
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PagesOrder.HorizontalReversed">
      <summary>
            HorizontalReversed
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PagesOrder.Vertical">
      <summary>
            Vertical
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Model.PageSetup.PagesOrder.VerticalReversed">
      <summary>
            VerticalReversed
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.#ctor(System.String,GrapeCity.Viewer.Common.Model.PageSetup.PaperSizeUnit,GrapeCity.Viewer.Common.Size)">
      <summary>
            Creates new instance of <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize"></see>.
            </summary>
      <param name="name">The name of paper format.</param>
      <param name="unit">The units of paper size.</param>
      <param name="size">The size of paper.</param>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.Equals(System.Object)">
      <summary>
            Determines whether the specified object is considered equal to the current instance of the <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize"></see> .
            </summary>
      <param name="obj">The object to compare.</param>
      <returns>true if the instances are equal; otherwise false.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.Equals(GrapeCity.Viewer.Common.Model.PageSetup.PaperSize)">
      <summary>
            Determines whether the specified <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize"></see> is considered equal to the current instance.
            </summary>
      <param name="other">The <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize"></see> to compare.</param>
      <returns>true if the instances are equal; otherwise false.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.GetHashCode">
      <summary>
            Serves as a hash function for <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize"></see>.
            </summary>
      <returns>A hash code for the current instance of <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize"></see>.</returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize.ToString">
      <summary>
            Returns a string that represents the current instance of <see cref="T:GrapeCity.Viewer.Common.Model.PageSetup.PaperSize"></see>.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.HighlightDocumentViewModel.#ctor(GrapeCity.Viewer.Common.Model.DocumentModel,GrapeCity.Viewer.Common.Model.ReportPaneModel)">
      <summary>
      </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Model.RunOptions.ForceDataRefresh">
      <summary>
      </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Model.ReportPaneModel.#ctor(GrapeCity.Viewer.Common.Model.ViewerModel)">
      <summary>
      </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Margin.Empty">
      <summary>
            Initializes an empty margin with all margins setted to zero.
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Margin.Left">
      <summary>
            Left margin
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Margin.Right">
      <summary>
            Right margin
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Margin.Top">
      <summary>
            Top margin
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Margin.Bottom">
      <summary>
            Bottom margin
            </summary>
    </member>
    <member name="M:GrapeCity.Viewer.Common.Margin.Equals(System.Object)">
      <summary>
            Checks whether the Margin equals to the specified one.
            </summary>
      <param name="obj">Margin to check with.</param>
      <returns>
        <c>True</c> if the margins are equal, <c>False</c> othervise.</returns>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Margin.Horizontal">
      <summary>
            Horizontal margin (left plus right)
            </summary>
    </member>
    <member name="P:GrapeCity.Viewer.Common.Margin.Vertical">
      <summary>
            Vertical margin (top plus bottom)
            </summary>
    </member>
    <member name="F:GrapeCity.Viewer.Common.Rect.Empty">
      <summary>
            Initializes an empty Rect with zero location and size.
            </summary>
    </member>
  </members>
</doc>